\input texinfo

@c data-frame.texi --- Reference manual

@c Copyright (C) 2019-2022 Steve Nunez

@c This file is part of DATA-FRAME.

@c This program is distributed under the terms of the Microsoft Public
@c License.


@c Commentary:

@c Generated automatically by Declt version 4.0 beta 2 "William Riker"
@c on Wed Sep 07 13:39:30 2022 GMT+8.


@c ====================================================================
@c Header
@c ====================================================================
@c %**start of header
@setfilename data-frame.info
@settitle The DATA-FRAME Reference Manual
@afourpaper
@documentencoding UTF-8
@c %**end of header



@c ====================================================================
@c Format Specific Tweaks
@c ====================================================================
@tex
%% Declt uses several Unicode characters to "reveal" blanks. This
%% works fine in HTML or Info output, but TeX will have problems with
%% these. The code below translates those characters to something that
%% TeX can handle.

%% U+23B5 (Bottom Square Bracket), used to reveal white spaces, is
%% translated to its Computer Modern teletype version.
\DeclareUnicodeCharacter{23B5}{{\tt\char'040}}

%% U+21B5 (Downwards Arrow With Corner Leftwards), used to reveal
%% carriage returns, is translated to \hookleftarrow in math mode.
\DeclareUnicodeCharacter{21B5}{\ensuremath\hookleftarrow}

%% U+21E5 (Rightwards Arrow To Bar), used to reveal tabs, is
%% translated to something that looks similar, based on a rightarrow
%% and a vertical bar from the math extension font.
\DeclareUnicodeCharacter{21E5}{%
  \ensuremath{\rightarrow\kern-.5em\mathchar\"130C}}


%% Declt uses several Unicode characters to replace "fragile" ones in
%% anchor names and references. These characters are chosen to resemble
%% the original ones, without interfering with Info syntax. In TeX
%% however, we can switch them back to the original versions, because
%% cross-references are done differently. In theory, I think we could do
%% something similar for HTML output (again, only the Info syntax poses
%% problems), but I don't know how to do something similar to what's
%% below.

%% U+2024 (One Dot Leader) replaces periods.
\DeclareUnicodeCharacter{2024}{.}

%% U+2236 (Ratio) replaces colons.
\DeclareUnicodeCharacter{2236}{:}

%% U+2768 (Medium Left Parenthesis Ornament) replaces left parenthesis.
\DeclareUnicodeCharacter{2768}{(}

%% U+2769 (Medium Right Parenthesis Ornament) replaces right parenthesis.
\DeclareUnicodeCharacter{2769}{)}

%% U+214B (Turned Ampersand) replaces ampersands.
\DeclareUnicodeCharacter{214B}{&}

%% U+2216 (Set Minus) replaces backslashes.
\DeclareUnicodeCharacter{2216}{\char"5C}

%% The following ones are already defined in texinfo.tex so we have nothing
%% more to do:
%% U+201A (Single Low-9 Quotation Mark) replaces commas.
%% U+2205 (Empty Set) replaces empty symbol names.

@end tex



@c ====================================================================
@c Settings
@c ====================================================================
@setchapternewpage odd
@documentdescription
The DATA-FRAME Reference Manual, version 1.1.0.
@end documentdescription



@c ====================================================================
@c New Commands
@c ====================================================================

@c ---------------
@c Indexing macros
@c ---------------

@c Packages
@macro packageindex{name}
@tpindex \name\
@tpindex @r{Package, }\name\
@end macro

@c Systems
@macro systemindex{name}
@tpindex \name\
@tpindex @r{System, }\name\
@end macro

@c Modules
@macro moduleindex{name}
@tpindex @t{\name\}
@tpindex Module, @t{\name\}
@end macro

@c Files
@macro fileindex{name}
@tpindex @t{\name\}
@tpindex File, @t{\name\}
@end macro

@c The following macros are meant to be used within @defxxx environments.
@c Texinfo performs half the indexing job and we do the other half.

@c Constants
@macro constantsubindex{name}
@vindex @r{Constant, }\name\
@end macro

@c Special variables
@macro specialsubindex{name}
@vindex @r{Special Variable, }\name\
@end macro

@c Symbol macros
@macro symbolmacrosubindex{name}
@vindex @r{Symbol Macro, }\name\
@end macro

@c Slots
@macro slotsubindex{name}
@vindex @r{Slot, }\name\
@end macro

@c Macros
@macro macrosubindex{name}
@findex @r{Macro, }\name\
@end macro

@c Compiler Macros
@macro compilermacrosubindex{name}
@findex @r{Compiler Macro, }\name\
@end macro

@c Functions
@macro functionsubindex{name}
@findex @r{Function, }\name\
@end macro

@c Methods
@macro methodsubindex{name}
@findex @r{Method, }\name\
@end macro

@c Generic Functions
@macro genericsubindex{name}
@findex @r{Generic Function, }\name\
@end macro

@c Setf Expanders
@macro expandersubindex{name}
@findex @r{Setf Expander, }\name\
@end macro

@c Method Combinations
@macro combinationsubindex{name}
@findex @r{Method Combination, }\name\
@end macro

@c Conditions
@macro conditionsubindex{name}
@tpindex @r{Condition, }\name\
@end macro

@c Structures
@macro structuresubindex{name}
@tpindex @r{Structure, }\name\
@end macro

@c Types
@macro typesubindex{name}
@tpindex @r{Type, }\name\
@end macro

@c Classes
@macro classsubindex{name}
@tpindex @r{Class, }\name\
@end macro



@c ====================================================================
@c Info Category and Directory
@c ====================================================================
@dircategory Common Lisp
@direntry
* DATA-FRAME Reference Manual: (data-frame). The DATA-FRAME Reference Manual.
@end direntry



@c ====================================================================
@c Copying
@c ====================================================================
@copying
@quotation
Copyright @copyright{} 2019-2022 Steve Nunez

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries a copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that the
section entitled ``Copying'' is included exactly as in the original.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be translated as well.
@end quotation
@end copying



@c ====================================================================
@c Title Page
@c ====================================================================
@titlepage
@title The DATA-FRAME Reference Manual
@subtitle Data frames for Common Lisp, version 1.1.0

@author Steve Nunez <@email{steve@atchar{}symbolics.tech}>

@page
@quotation
This manual was generated automatically by Declt 4.0b2.
@end quotation
@vskip 0pt plus 1filll
@insertcopying
@end titlepage



@c ====================================================================
@c Table of Contents
@c ====================================================================
@contents



@c ====================================================================
@c Top
@c ====================================================================
@ifnottex
@node Top, Copying, (dir), (dir)
@top The DATA-FRAME Reference Manual
This is the DATA-FRAME Reference Manual, version 1.1.0,
generated automatically by Declt version 4.0b2.

@menu
* Copying:: The Microsoft Public License
* Systems:: The systems documentation
* Files:: The files documentation
* Packages:: The packages documentation
* Definitions:: The symbols documentation
* Indexes:: Concepts, functions, variables and data types
@end menu

@insertcopying
@end ifnottex



@c ====================================================================
@c Copying
@c ====================================================================
@node Copying, Systems, Top, Top
@unnumbered Copying
@quotation
This program is distributed under the terms of the Microsoft Public
License.
@end quotation



@c ====================================================================
@c Systems
@c ====================================================================
@node Systems, Files, Copying, Top
@chapter Systems
The main system appears first, followed by any subsystem dependency.

@menu
* The data-frame system::
@end menu


@c ---------------------
@c The data-frame system
@c ---------------------
@node The data-frame system, , Systems, Systems
@section @t{data-frame}
@anchor{❨1❩}@c
@systemindex{data-frame}@c
A data manipulation library for statistical computing
@table @strong
@item Long Name
Data frames for Common Lisp
@item Author
Steve Nunez <@email{steve@atchar{}symbolics.tech}>
@item Home Page
@uref{https://lisp-stat.dev/docs/manuals/data-frame}
@item Source Control
@t{(GIT https://github.com/Lisp-Stat/data-frame.git)}
@item Bug Tracker
@uref{https://github.com/Lisp-Stat/data-frame/issues}
@item License
MS-PL
@item Long Description
A data frame is a common way of storing data for statistical analysis.  Under the hood@comma{} a data frame is a vector of equal-length vectors.  Each element of the vector can be thought of as a column and the length of each element of the vector is the number of rows.  As a result@comma{} data frames can store different classes of objects in each column (i.e. numeric@comma{} character@comma{} factor).  In essence@comma{} the easiest way to think of a data frame is as an Excel worksheet that contains columns of different types of data but are all of equal length rows.

From a design perspective@comma{} Lisp-Stat's data frame is conceptually most similar to the 'tibble' from the tidyverse@comma{} but using Common Lisp idioms@comma{} style and syntax.
@item Version
1.1.0
@item Dependencies
@itemize @bullet
@item
@t{alexandria}@: (system).
@item
@t{alexandria+}@: (system).
@item
@t{anaphora}@: (system).
@item
@t{array-operations}@: (system).
@item
@t{num-utils}@: (system).
@item
@t{select}@: (system).
@item
@t{statistics}@: (system).
@item
@t{let-plus}@: (system).
@item
@t{duologue}@: (system).
@end itemize
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Child Components
@itemize @bullet
@item
@ref{❨3❩, , @t{pkgdcl.lisp}}@: (file).
@item
@ref{❨4❩, , @t{utils.lisp}}@: (file).
@item
@ref{❨5❩, , @t{data-frame.lisp}}@: (file).
@item
@ref{❨6❩, , @t{pprint.lisp}}@: (file).
@item
@ref{❨7❩, , @t{formatted-output.lisp}}@: (file).
@item
@ref{❨8❩, , @t{summary.lisp}}@: (file).
@item
@ref{❨9❩, , @t{defdf.lisp}}@: (file).
@item
@ref{❨10❩, , @t{conditions.lisp}}@: (file).
@item
@ref{❨11❩, , @t{properties.lisp}}@: (file).
@item
@ref{❨12❩, , @t{missing.lisp}}@: (file).
@item
@ref{❨13❩, , @t{filter.lisp}}@: (file).
@item
@ref{❨14❩, , @t{plist-aops.lisp}}@: (file).
@item
@ref{❨15❩, , @t{data.lisp}}@: (file).
@item
@ref{❨16❩, , @t{rdata.lisp}}@: (file).
@end itemize
@end table



@c ====================================================================
@c Files
@c ====================================================================
@node Files, Packages, Systems, Top
@chapter Files
Files are sorted by type and then listed depth-first from the systems
components trees.

@menu
* Lisp files::
@end menu


@c ----------
@c Lisp files
@c ----------
@node Lisp files, , Files, Files
@section Lisp
@menu
* The data-frame/data-frame․asd file::
* The data-frame/pkgdcl․lisp file::
* The data-frame/utils․lisp file::
* The data-frame/data-frame․lisp file::
* The data-frame/pprint․lisp file::
* The data-frame/formatted-output․lisp file::
* The data-frame/summary․lisp file::
* The data-frame/defdf․lisp file::
* The data-frame/conditions․lisp file::
* The data-frame/properties․lisp file::
* The data-frame/missing․lisp file::
* The data-frame/filter․lisp file::
* The data-frame/plist-aops․lisp file::
* The data-frame/data․lisp file::
* The data-frame/rdata․lisp file::
@end menu

@node The data-frame/data-frame․asd file, The data-frame/pkgdcl․lisp file, Lisp files, Lisp files
@subsection @t{data-frame/data-frame.asd}
@anchor{❨2❩}@c
@fileindex{data-frame.asd}@c
@table @strong
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item ASDF Systems
@ref{❨1❩, , @t{data-frame}}.
@end table

@node The data-frame/pkgdcl․lisp file, The data-frame/utils․lisp file, The data-frame/data-frame․asd file, Lisp files
@subsection @t{data-frame/pkgdcl.lisp}
@anchor{❨3❩}@c
@fileindex{pkgdcl.lisp}@c
@table @strong
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Packages
@ref{❨17❩, , @t{data-frame}}.
@end table

@node The data-frame/utils․lisp file, The data-frame/data-frame․lisp file, The data-frame/pkgdcl․lisp file, Lisp files
@subsection @t{data-frame/utils.lisp}
@anchor{❨4❩}@c
@fileindex{utils.lisp}@c
@table @strong
@item Dependency
@ref{❨3❩, , @t{pkgdcl.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨46❩, , @t{column-type}}@: (function).
@item
@ref{❨55❩, , @t{delete-nth}}@: (function).
@item
@ref{❨127❩, , @t{delete-nth*}}@: (macro).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨196❩, , @t{get-type}}@: (function).
@item
@ref{❨156❩, , @t{types-in-column}}@: (function).
@end itemize
@end table

@node The data-frame/data-frame․lisp file, The data-frame/pprint․lisp file, The data-frame/utils․lisp file, Lisp files
@subsection @t{data-frame/data-frame.lisp}
@anchor{❨5❩}@c
@fileindex{data-frame.lisp}@c
@table @strong
@item Dependency
@ref{❨4❩, , @t{utils.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨45❩, , @t{*large-data*}}@: (special variable).
@item
@ref{❨39❩, , @t{add-column!}}@: (function).
@item
@ref{❨21❩, , @t{add-columns}}@: (function).
@item
@ref{❨126❩, , @t{add-columns!}}@: (function).
@item
@ref{❨77❩, , @t{alist-df}}@: (function).
@item
@ref{❨67❩, , @t{alist-dv}}@: (function).
@item
@ref{❨372❩, , @t{as-alist}}@: (method).
@item
@ref{❨358❩, , @t{as-array}}@: (method).
@item
@ref{❨363❩, , @t{as-array}}@: (method).
@item
@ref{❨384❩, , @t{axis-dimension}}@: (method).
@item
@ref{❨383❩, , @t{canonical-representation}}@: (method).
@item
@ref{❨53❩, , @t{column}}@: (function).
@item
@ref{❨54❩, , @t{(setf column)}}@: (function).
@item
@ref{❨42❩, , @t{column-names}}@: (function).
@item
@ref{❨81❩, , @t{columns}}@: (function).
@item
@ref{❨76❩, , @t{copy}}@: (function).
@item
@ref{❨58❩, , @t{count-rows}}@: (function).
@item
@ref{❨71❩, , @t{data}}@: (class).
@item
@ref{❨52❩, , @t{data-frame}}@: (class).
@item
@ref{❨125❩, , @t{data-type}}@: (type).
@item
@ref{❨48❩, , @t{data-vector}}@: (class).
@item
@ref{❨360❩, , @t{describe-object}}@: (method).
@item
@ref{❨29❩, , @t{df}}@: (function).
@item
@ref{❨65❩, , @t{df-remove-duplicates}}@: (function).
@item
@ref{❨359❩, , @t{dims}}@: (method).
@item
@ref{❨364❩, , @t{dims}}@: (method).
@item
@ref{❨96❩, , @t{do-rows}}@: (function).
@item
@ref{❨32❩, , @t{dv}}@: (function).
@item
@ref{❨373❩, , @t{element-type}}@: (method).
@item
@ref{❨367❩, , @t{initialize-instance}}@: (method).
@item
@ref{❨80❩, , @t{keys}}@: (function).
@item
@ref{❨94❩, , @t{make-df}}@: (function).
@item
@ref{❨98❩, , @t{make-dv}}@: (function).
@item
@ref{❨95❩, , @t{map-columns}}@: (function).
@item
@ref{❨23❩, , @t{map-df}}@: (function).
@item
@ref{❨84❩, , @t{map-rows}}@: (function).
@item
@ref{❨19❩, , @t{mask-rows}}@: (function).
@item
@ref{❨25❩, , @t{matrix-df}}@: (function).
@item
@ref{❨34❩, , @t{name}}@: (reader method).
@item
@ref{❨36❩, , @t{(setf name)}}@: (writer method).
@item
@ref{❨365❩, , @t{ncol}}@: (method).
@item
@ref{❨366❩, , @t{nrow}}@: (method).
@item
@ref{❨109❩, , @t{plist-df}}@: (function).
@item
@ref{❨108❩, , @t{plist-dv}}@: (function).
@item
@ref{❨356❩, , @t{print-object}}@: (method).
@item
@ref{❨361❩, , @t{print-object}}@: (method).
@item
@ref{❨381❩, , @t{print-object}}@: (method).
@item
@ref{❨66❩, , @t{remove-column!}}@: (function).
@item
@ref{❨100❩, , @t{remove-columns}}@: (function).
@item
@ref{❨103❩, , @t{rename-column!}}@: (method).
@item
@ref{❨75❩, , @t{replace-column}}@: (function).
@item
@ref{❨28❩, , @t{replace-column!}}@: (function).
@item
@ref{❨105❩, , @t{rows}}@: (function).
@item
@ref{❨357❩, , @t{select}}@: (method).
@item
@ref{❨362❩, , @t{select}}@: (method).
@item
@ref{❨382❩, , @t{select}}@: (method).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨195❩, , @t{add-key!}}@: (function).
@item
@ref{❨173❩, , @t{add-keys}}@: (function).
@item
@ref{❨172❩, , @t{alist-data}}@: (function).
@item
@ref{❨149❩, , @t{check-column-compatibility}}@: (generic function).
@item
@ref{❨190❩, , @t{copy-ordered-keys}}@: (function).
@item
@ref{❨145❩, , @t{define-data-subclass}}@: (macro).
@item
@ref{❨211❩, , @t{df-env-p}}@: (function).
@item
@ref{❨136❩, , @t{ensure-arguments-alist}}@: (function).
@item
@ref{❨217❩, , @t{key-index}}@: (function).
@item
@ref{❨158❩, , @t{keys-count}}@: (function).
@item
@ref{❨199❩, , @t{keys-vector}}@: (function).
@item
@ref{❨215❩, , @t{make-data}}@: (function).
@item
@ref{❨226❩, , @t{make-ordered-keys}}@: (function).
@item
@ref{❨140❩, , @t{ordered-keys}}@: (function).
@item
@ref{❨141❩, , @t{ordered-keys}}@: (structure).
@item
@ref{❨212❩, , @t{ordered-keys-p}}@: (function).
@item
@ref{❨194❩, , @t{ordered-keys-table}}@: (reader).
@item
@ref{❨188❩, , @t{plist-data}}@: (function).
@item
@ref{❨232❩, , @t{remove-columns!}}@: (function).
@item
@ref{❨213❩, , @t{remove-key!}}@: (function).
@end itemize
@end table

@node The data-frame/pprint․lisp file, The data-frame/formatted-output․lisp file, The data-frame/data-frame․lisp file, Lisp files
@subsection @t{data-frame/pprint.lisp}
@anchor{❨6❩}@c
@fileindex{pprint.lisp}@c
@table @strong
@item Dependency
@ref{❨5❩, , @t{data-frame.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨83❩, , @t{head}}@: (method).
@item
@ref{❨56❩, , @t{print-array}}@: (function).
@item
@ref{❨24❩, , @t{print-data}}@: (function).
@item
@ref{❨106❩, , @t{short-string}}@: (function).
@item
@ref{❨124❩, , @t{tail}}@: (method).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨186❩, , @t{*max-digits*}}@: (special variable).
@item
@ref{❨197❩, , @t{*row-numbers-p*}}@: (special variable).
@item
@ref{❨227❩, , @t{2d-array-to-list}}@: (function).
@item
@ref{❨182❩, , @t{column-type-format}}@: (function).
@item
@ref{❨222❩, , @t{default-column-formats}}@: (method).
@item
@ref{❨153❩, , @t{max-decimal}}@: (function).
@item
@ref{❨131❩, , @t{max-width}}@: (function).
@item
@ref{❨168❩, , @t{printer-status}}@: (function).
@item
@ref{❨137❩, , @t{reverse-df}}@: (function).
@end itemize
@end table

@node The data-frame/formatted-output․lisp file, The data-frame/summary․lisp file, The data-frame/pprint․lisp file, Lisp files
@subsection @t{data-frame/formatted-output.lisp}
@anchor{❨7❩}@c
@fileindex{formatted-output.lisp}@c
@table @strong
@item Dependency
@ref{❨6❩, , @t{pprint.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨27❩, , @t{df-print}}@: (function).
@item
@ref{❨101❩, , @t{print-markdown}}@: (function).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨183❩, , @t{aesthetic-string}}@: (function).
@item
@ref{❨144❩, , @t{print-table}}@: (function).
@item
@ref{❨134❩, , @t{weave}}@: (function).
@end itemize
@end table

@node The data-frame/summary․lisp file, The data-frame/defdf․lisp file, The data-frame/formatted-output․lisp file, Lisp files
@subsection @t{data-frame/summary.lisp}
@anchor{❨8❩}@c
@fileindex{summary.lisp}@c
@table @strong
@item Dependency
@ref{❨7❩, , @t{formatted-output.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨38❩, , @t{*distinct-maximum*}}@: (special variable).
@item
@ref{❨57❩, , @t{*distinct-threshold*}}@: (special variable).
@item
@ref{❨20❩, , @t{*quantile-threshold*}}@: (special variable).
@item
@ref{❨85❩, , @t{*summary-minimum-length*}}@: (special variable).
@item
@ref{❨78❩, , @t{bit-variable-summary}}@: (structure).
@item
@ref{❨68❩, , @t{factor-variable-summary}}@: (structure).
@item
@ref{❨62❩, , @t{generic-variable-summary}}@: (structure).
@item
@ref{❨129❩, , @t{get-summaries}}@: (function).
@item
@ref{❨369❩, , @t{print-object}}@: (method).
@item
@ref{❨370❩, , @t{print-object}}@: (method).
@item
@ref{❨374❩, , @t{print-object}}@: (method).
@item
@ref{❨375❩, , @t{print-object}}@: (method).
@item
@ref{❨86❩, , @t{real-variable-summary}}@: (structure).
@item
@ref{❨47❩, , @t{summarize-column}}@: (function).
@item
@ref{❨93❩, , @t{summary}}@: (function).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨236❩, , @t{bit-variable-summary-count}}@: (reader).
@item
@ref{❨152❩, , @t{bit-variable-summary-desc}}@: (function).
@item
@ref{❨207❩, , @t{bit-variable-summary-length}}@: (function).
@item
@ref{❨230❩, , @t{bit-variable-summary-missing}}@: (function).
@item
@ref{❨224❩, , @t{bit-variable-summary-name}}@: (function).
@item
@ref{❨169❩, , @t{bit-variable-summary-p}}@: (function).
@item
@ref{❨228❩, , @t{column-length}}@: (generic function).
@item
@ref{❨223❩, , @t{copy-bit-variable-summary}}@: (function).
@item
@ref{❨202❩, , @t{copy-factor-variable-summary}}@: (function).
@item
@ref{❨209❩, , @t{copy-generic-variable-summary}}@: (function).
@item
@ref{❨132❩, , @t{copy-real-variable-summary}}@: (function).
@item
@ref{❨143❩, , @t{copy-variable-summary%}}@: (function).
@item
@ref{❨174❩, , @t{distinct}}@: (function).
@item
@ref{❨205❩, , @t{ensure-not-ratio}}@: (function).
@item
@ref{❨175❩, , @t{factor-variable-summary-desc}}@: (function).
@item
@ref{❨210❩, , @t{factor-variable-summary-element-count-alist}}@: (reader).
@item
@ref{❨237❩, , @t{factor-variable-summary-length}}@: (function).
@item
@ref{❨187❩, , @t{factor-variable-summary-missing}}@: (function).
@item
@ref{❨198❩, , @t{factor-variable-summary-name}}@: (function).
@item
@ref{❨231❩, , @t{factor-variable-summary-p}}@: (function).
@item
@ref{❨159❩, , @t{generic-variable-summary-desc}}@: (function).
@item
@ref{❨138❩, , @t{generic-variable-summary-element-count-alist}}@: (reader).
@item
@ref{❨208❩, , @t{generic-variable-summary-length}}@: (function).
@item
@ref{❨148❩, , @t{generic-variable-summary-missing}}@: (function).
@item
@ref{❨241❩, , @t{generic-variable-summary-name}}@: (function).
@item
@ref{❨238❩, , @t{generic-variable-summary-p}}@: (function).
@item
@ref{❨163❩, , @t{generic-variable-summary-quantiles}}@: (reader).
@item
@ref{❨240❩, , @t{make-bit-variable-summary}}@: (function).
@item
@ref{❨204❩, , @t{make-factor-variable-summary}}@: (function).
@item
@ref{❨191❩, , @t{make-generic-variable-summary}}@: (function).
@item
@ref{❨162❩, , @t{make-real-variable-summary}}@: (function).
@item
@ref{❨165❩, , @t{make-variable-summary%}}@: (function).
@item
@ref{❨170❩, , @t{monotonicp}}@: (function).
@item
@ref{❨160❩, , @t{print-count-and-percentage}}@: (function).
@item
@ref{❨220❩, , @t{real-variable-summary-desc}}@: (function).
@item
@ref{❨167❩, , @t{real-variable-summary-length}}@: (function).
@item
@ref{❨135❩, , @t{real-variable-summary-max}}@: (reader).
@item
@ref{❨155❩, , @t{real-variable-summary-mean}}@: (reader).
@item
@ref{❨166❩, , @t{real-variable-summary-min}}@: (reader).
@item
@ref{❨164❩, , @t{real-variable-summary-missing}}@: (function).
@item
@ref{❨201❩, , @t{real-variable-summary-name}}@: (function).
@item
@ref{❨157❩, , @t{real-variable-summary-p}}@: (function).
@item
@ref{❨225❩, , @t{real-variable-summary-q25}}@: (reader).
@item
@ref{❨219❩, , @t{real-variable-summary-q50}}@: (reader).
@item
@ref{❨133❩, , @t{real-variable-summary-q75}}@: (reader).
@item
@ref{❨218❩, , @t{summarize-factor-variable}}@: (function).
@item
@ref{❨146❩, , @t{summarize-generic-variable}}@: (function).
@item
@ref{❨189❩, , @t{summarize-real-variable}}@: (function).
@item
@ref{❨177❩, , @t{variable-summary%}}@: (structure).
@item
@ref{❨154❩, , @t{variable-summary%-desc}}@: (reader).
@item
@ref{❨171❩, , @t{variable-summary%-length}}@: (reader).
@item
@ref{❨216❩, , @t{variable-summary%-missing}}@: (reader).
@item
@ref{❨239❩, , @t{variable-summary%-name}}@: (reader).
@item
@ref{❨176❩, , @t{variable-summary%-p}}@: (function).
@end itemize
@end table

@node The data-frame/defdf․lisp file, The data-frame/conditions․lisp file, The data-frame/summary․lisp file, Lisp files
@subsection @t{data-frame/defdf.lisp}
@anchor{❨9❩}@c
@fileindex{defdf.lisp}@c
@table @strong
@item Dependency
@ref{❨8❩, , @t{summary.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨97❩, , @t{*ask-on-redefine*}}@: (special variable).
@item
@ref{❨30❩, , @t{defdf}}@: (macro).
@item
@ref{❨22❩, , @t{defdf-env}}@: (function).
@item
@ref{❨49❩, , @t{show-data-frames}}@: (function).
@item
@ref{❨37❩, , @t{undef}}@: (function).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨161❩, , @t{*data-frames*}}@: (special variable).
@item
@ref{❨214❩, , @t{show-symbols}}@: (function).
@end itemize
@end table

@node The data-frame/conditions․lisp file, The data-frame/properties․lisp file, The data-frame/defdf․lisp file, Lisp files
@subsection @t{data-frame/conditions.lisp}
@anchor{❨10❩}@c
@fileindex{conditions.lisp}@c
@table @strong
@item Dependency
@ref{❨9❩, , @t{defdf.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨51❩, , @t{data-frame}}@: (reader method).
@item
@ref{❨121❩, , @t{duplicate-key}}@: (condition).
@item
@ref{❨59❩, , @t{key-not-found}}@: (condition).
@item
@ref{❨40❩, , @t{large-data}}@: (condition).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨184❩, , @t{data-frame-exists}}@: (condition).
@item
@ref{❨193❩, , @t{data-size}}@: (reader method).
@item
@ref{❨139❩, , @t{df-exists-p}}@: (function).
@item
@ref{❨200❩, , @t{invalid-df-name}}@: (function).
@item
@ref{❨233❩, , @t{missing-data}}@: (condition).
@end itemize
@end table

@node The data-frame/properties․lisp file, The data-frame/missing․lisp file, The data-frame/conditions․lisp file, Lisp files
@subsection @t{data-frame/properties.lisp}
@anchor{❨11❩}@c
@fileindex{properties.lisp}@c
@table @strong
@item Dependency
@ref{❨10❩, , @t{conditions.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨107❩, , @t{get-property}}@: (function).
@item
@ref{❨31❩, , @t{heuristicate-types}}@: (function).
@item
@ref{❨128❩, , @t{set-properties}}@: (function).
@item
@ref{❨99❩, , @t{set-property}}@: (function).
@end itemize
@item Internals
@ref{❨206❩, , @t{show-properties}}@: (function).
@end table

@node The data-frame/missing․lisp file, The data-frame/filter․lisp file, The data-frame/properties․lisp file, Lisp files
@subsection @t{data-frame/missing.lisp}
@anchor{❨12❩}@c
@fileindex{missing.lisp}@c
@table @strong
@item Dependency
@ref{❨11❩, , @t{properties.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@itemize @bullet
@item
@ref{❨119❩, , @t{drop-missing}}@: (method).
@item
@ref{❨120❩, , @t{drop-missing}}@: (method).
@item
@ref{❨104❩, , @t{ignore-missing}}@: (function).
@item
@ref{❨110❩, , @t{missingp}}@: (generic function).
@item
@ref{❨44❩, , @t{replace-missing}}@: (method).
@end itemize
@item Internals
@ref{❨147❩, , @t{drop-na}}@: (function).
@end table

@node The data-frame/filter․lisp file, The data-frame/plist-aops․lisp file, The data-frame/missing․lisp file, Lisp files
@subsection @t{data-frame/filter.lisp}
@anchor{❨13❩}@c
@fileindex{filter.lisp}@c
@table @strong
@item Dependency
@ref{❨12❩, , @t{missing.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@ref{❨26❩, , @t{filter-rows}}@: (function).
@item Internals
@ref{❨203❩, , @t{key-list}}@: (function).
@end table

@node The data-frame/plist-aops․lisp file, The data-frame/data․lisp file, The data-frame/filter․lisp file, Lisp files
@subsection @t{data-frame/plist-aops.lisp}
@anchor{❨14❩}@c
@fileindex{plist-aops.lisp}@c
@table @strong
@item Dependency
@ref{❨13❩, , @t{filter.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Internals
@ref{❨130❩, , @t{ensure-plist}}@: (macro).
@end table

@node The data-frame/data․lisp file, The data-frame/rdata․lisp file, The data-frame/plist-aops․lisp file, Lisp files
@subsection @t{data-frame/data.lisp}
@anchor{❨15❩}@c
@fileindex{data.lisp}@c
@table @strong
@item Dependency
@ref{❨14❩, , @t{plist-aops.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Public Interface
@ref{❨70❩, , @t{data}}@: (function).
@end table

@node The data-frame/rdata․lisp file, , The data-frame/data․lisp file, Lisp files
@subsection @t{data-frame/rdata.lisp}
@anchor{❨16❩}@c
@fileindex{rdata.lisp}@c
@table @strong
@item Dependency
@ref{❨15❩, , @t{data.lisp}}@: (file).
@item Source
@ref{❨2❩, , @t{data-frame.asd}}.
@item Parent Component
@ref{❨1❩, , @t{data-frame}}@: (system).
@item Packages
@ref{❨18❩, , @t{rdata}}.
@item Public Interface
@itemize @bullet
@item
@ref{❨259❩, , @t{*r-default-datasets*}}@: (special variable).
@item
@ref{❨318❩, , @t{ability.cov}}@: (special variable).
@item
@ref{❨299❩, , @t{airmiles}}@: (special variable).
@item
@ref{❨325❩, , @t{airpassengers}}@: (special variable).
@item
@ref{❨311❩, , @t{airquality}}@: (special variable).
@item
@ref{❨289❩, , @t{anscombe}}@: (special variable).
@item
@ref{❨326❩, , @t{attenu}}@: (special variable).
@item
@ref{❨271❩, , @t{attitude}}@: (special variable).
@item
@ref{❨282❩, , @t{austres}}@: (special variable).
@item
@ref{❨260❩, , @t{base-url}}@: (special variable).
@item
@ref{❨303❩, , @t{bjsales}}@: (special variable).
@item
@ref{❨286❩, , @t{bod}}@: (special variable).
@item
@ref{❨242❩, , @t{cars}}@: (special variable).
@item
@ref{❨320❩, , @t{chickweight}}@: (special variable).
@item
@ref{❨278❩, , @t{chickwts}}@: (special variable).
@item
@ref{❨251❩, , @t{co2-1}}@: (special variable).
@item
@ref{❨314❩, , @t{co2-2}}@: (special variable).
@item
@ref{❨316❩, , @t{crimtab}}@: (special variable).
@item
@ref{❨263❩, , @t{discoveries}}@: (special variable).
@item
@ref{❨298❩, , @t{dnase}}@: (special variable).
@item
@ref{❨304❩, , @t{esoph}}@: (special variable).
@item
@ref{❨309❩, , @t{euro}}@: (special variable).
@item
@ref{❨243❩, , @t{eustockmarkets}}@: (special variable).
@item
@ref{❨255❩, , @t{faithful}}@: (special variable).
@item
@ref{❨248❩, , @t{formaldehyde}}@: (special variable).
@item
@ref{❨276❩, , @t{freeny}}@: (special variable).
@item
@ref{❨252❩, , @t{haireyecolor}}@: (special variable).
@item
@ref{❨287❩, , @t{harman23.cor}}@: (special variable).
@item
@ref{❨312❩, , @t{harman74.cor}}@: (special variable).
@item
@ref{❨270❩, , @t{index}}@: (special variable).
@item
@ref{❨293❩, , @t{indometh}}@: (special variable).
@item
@ref{❨292❩, , @t{infert}}@: (special variable).
@item
@ref{❨277❩, , @t{insectsprays}}@: (special variable).
@item
@ref{❨330❩, , @t{iris}}@: (special variable).
@item
@ref{❨267❩, , @t{iris3}}@: (special variable).
@item
@ref{❨246❩, , @t{islands}}@: (special variable).
@item
@ref{❨331❩, , @t{johnsonjohnson}}@: (special variable).
@item
@ref{❨257❩, , @t{lakehuron}}@: (special variable).
@item
@ref{❨283❩, , @t{lh}}@: (special variable).
@item
@ref{❨323❩, , @t{lifecyclesavings}}@: (special variable).
@item
@ref{❨307❩, , @t{loblolly}}@: (special variable).
@item
@ref{❨313❩, , @t{longley}}@: (special variable).
@item
@ref{❨250❩, , @t{lynx}}@: (special variable).
@item
@ref{❨275❩, , @t{morley}}@: (special variable).
@item
@ref{❨281❩, , @t{mpg}}@: (special variable).
@item
@ref{❨295❩, , @t{mtcars}}@: (special variable).
@item
@ref{❨285❩, , @t{nhtemp}}@: (special variable).
@item
@ref{❨306❩, , @t{nile}}@: (special variable).
@item
@ref{❨288❩, , @t{nottem}}@: (special variable).
@item
@ref{❨266❩, , @t{npk}}@: (special variable).
@item
@ref{❨327❩, , @t{nycflights13-airlines}}@: (special variable).
@item
@ref{❨279❩, , @t{nycflights13-airports}}@: (special variable).
@item
@ref{❨300❩, , @t{nycflights13-flights}}@: (special variable).
@item
@ref{❨244❩, , @t{nycflights13-planes}}@: (special variable).
@item
@ref{❨333❩, , @t{nycflights13-weather}}@: (special variable).
@item
@ref{❨280❩, , @t{occupationalstatus}}@: (special variable).
@item
@ref{❨317❩, , @t{orange}}@: (special variable).
@item
@ref{❨310❩, , @t{orchardsprays}}@: (special variable).
@item
@ref{❨256❩, , @t{plantgrowth}}@: (special variable).
@item
@ref{❨328❩, , @t{precip}}@: (special variable).
@item
@ref{❨329❩, , @t{presidents}}@: (special variable).
@item
@ref{❨254❩, , @t{pressure}}@: (special variable).
@item
@ref{❨268❩, , @t{puromycin}}@: (special variable).
@item
@ref{❨272❩, , @t{quakes}}@: (special variable).
@item
@ref{❨322❩, , @t{randu}}@: (special variable).
@item
@ref{❨264❩, , @t{rivers}}@: (special variable).
@item
@ref{❨332❩, , @t{rock}}@: (special variable).
@item
@ref{❨245❩, , @t{seatbelts}}@: (special variable).
@item
@ref{❨273❩, , @t{stackloss}}@: (special variable).
@item
@ref{❨247❩, , @t{sunspot.month}}@: (special variable).
@item
@ref{❨265❩, , @t{sunspot.year}}@: (special variable).
@item
@ref{❨297❩, , @t{sunspots}}@: (special variable).
@item
@ref{❨262❩, , @t{swiss}}@: (special variable).
@item
@ref{❨291❩, , @t{theoph}}@: (special variable).
@item
@ref{❨261❩, , @t{titanic}}@: (special variable).
@item
@ref{❨269❩, , @t{toothgrowth}}@: (special variable).
@item
@ref{❨290❩, , @t{treering}}@: (special variable).
@item
@ref{❨302❩, , @t{trees}}@: (special variable).
@item
@ref{❨301❩, , @t{ucbadmissions}}@: (special variable).
@item
@ref{❨315❩, , @t{ukdriverdeaths}}@: (special variable).
@item
@ref{❨296❩, , @t{ukgas}}@: (special variable).
@item
@ref{❨319❩, , @t{usaccdeaths}}@: (special variable).
@item
@ref{❨324❩, , @t{usarrests}}@: (special variable).
@item
@ref{❨253❩, , @t{usjudgeratings}}@: (special variable).
@item
@ref{❨249❩, , @t{uspersonalexpenditure}}@: (special variable).
@item
@ref{❨305❩, , @t{uspop}}@: (special variable).
@item
@ref{❨274❩, , @t{vadeaths}}@: (special variable).
@item
@ref{❨308❩, , @t{volcano}}@: (special variable).
@item
@ref{❨294❩, , @t{warpbreaks}}@: (special variable).
@item
@ref{❨258❩, , @t{women}}@: (special variable).
@item
@ref{❨321❩, , @t{worldphones}}@: (special variable).
@item
@ref{❨284❩, , @t{wwwusage}}@: (special variable).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨334❩, , @t{*r-default-dataframes*}}@: (special variable).
@item
@ref{❨335❩, , @t{student-sleep}}@: (special variable).
@end itemize
@end table



@c ====================================================================
@c Packages
@c ====================================================================
@node Packages, Definitions, Files, Top
@chapter Packages
Packages are listed by definition order.

@menu
* The data-frame package::
* The rdata package::
@end menu


@c ----------------------
@c The data-frame package
@c ----------------------
@node The data-frame package, The rdata package, Packages, Packages
@section @t{data-frame}
@anchor{❨17❩}@c
@packageindex{data-frame}@c
@table @strong
@item Source
@ref{❨3❩, , @t{pkgdcl.lisp}}.
@item Nickname
@t{df}
@item Use List
@itemize @bullet
@item
@t{alexandria}.
@item
@t{alexandria+}.
@item
@t{anaphora}.
@item
@t{common-lisp}.
@item
@t{let-plus}.
@item
@t{select}.
@item
@t{select-dev}.
@end itemize
@item Used By List
@t{dfio}.
@item Public Interface
@itemize @bullet
@item
@ref{❨97❩, , @t{*ask-on-redefine*}}@: (special variable).
@item
@ref{❨38❩, , @t{*distinct-maximum*}}@: (special variable).
@item
@ref{❨57❩, , @t{*distinct-threshold*}}@: (special variable).
@item
@ref{❨45❩, , @t{*large-data*}}@: (special variable).
@item
@ref{❨20❩, , @t{*quantile-threshold*}}@: (special variable).
@item
@ref{❨85❩, , @t{*summary-minimum-length*}}@: (special variable).
@item
@ref{❨39❩, , @t{add-column!}}@: (function).
@item
@ref{❨21❩, , @t{add-columns}}@: (function).
@item
@ref{❨126❩, , @t{add-columns!}}@: (function).
@item
@ref{❨77❩, , @t{alist-df}}@: (function).
@item
@ref{❨67❩, , @t{alist-dv}}@: (function).
@item
@ref{❨78❩, , @t{bit-variable-summary}}@: (structure).
@item
@ref{❨53❩, , @t{column}}@: (function).
@item
@ref{❨54❩, , @t{(setf column)}}@: (function).
@item
@ref{❨42❩, , @t{column-names}}@: (function).
@item
@ref{❨46❩, , @t{column-type}}@: (function).
@item
@ref{❨81❩, , @t{columns}}@: (function).
@item
@ref{❨76❩, , @t{copy}}@: (function).
@item
@ref{❨58❩, , @t{count-rows}}@: (function).
@item
@ref{❨70❩, , @t{data}}@: (function).
@item
@ref{❨71❩, , @t{data}}@: (class).
@item
@ref{❨50❩, , @t{data-frame}}@: (generic reader).
@item
@ref{❨52❩, , @t{data-frame}}@: (class).
@item
@ref{❨125❩, , @t{data-type}}@: (type).
@item
@ref{❨48❩, , @t{data-vector}}@: (class).
@item
@ref{❨30❩, , @t{defdf}}@: (macro).
@item
@ref{❨22❩, , @t{defdf-env}}@: (function).
@item
@ref{❨55❩, , @t{delete-nth}}@: (function).
@item
@ref{❨127❩, , @t{delete-nth*}}@: (macro).
@item
@ref{❨29❩, , @t{df}}@: (function).
@item
@ref{❨27❩, , @t{df-print}}@: (function).
@item
@ref{❨65❩, , @t{df-remove-duplicates}}@: (function).
@item
@ref{❨96❩, , @t{do-rows}}@: (function).
@item
@ref{❨118❩, , @t{drop-missing}}@: (generic function).
@item
@ref{❨121❩, , @t{duplicate-key}}@: (condition).
@item
@ref{❨32❩, , @t{dv}}@: (function).
@item
@ref{❨68❩, , @t{factor-variable-summary}}@: (structure).
@item
@ref{❨26❩, , @t{filter-rows}}@: (function).
@item
@ref{❨62❩, , @t{generic-variable-summary}}@: (structure).
@item
@ref{❨107❩, , @t{get-property}}@: (function).
@item
@ref{❨129❩, , @t{get-summaries}}@: (function).
@item
@ref{❨82❩, , @t{head}}@: (generic function).
@item
@ref{❨31❩, , @t{heuristicate-types}}@: (function).
@item
@ref{❨104❩, , @t{ignore-missing}}@: (function).
@item
@ref{❨59❩, , @t{key-not-found}}@: (condition).
@item
@ref{❨80❩, , @t{keys}}@: (function).
@item
@ref{❨40❩, , @t{large-data}}@: (condition).
@item
@ref{❨94❩, , @t{make-df}}@: (function).
@item
@ref{❨98❩, , @t{make-dv}}@: (function).
@item
@ref{❨95❩, , @t{map-columns}}@: (function).
@item
@ref{❨23❩, , @t{map-df}}@: (function).
@item
@ref{❨84❩, , @t{map-rows}}@: (function).
@item
@ref{❨19❩, , @t{mask-rows}}@: (function).
@item
@ref{❨25❩, , @t{matrix-df}}@: (function).
@item
@ref{❨110❩, , @t{missingp}}@: (generic function).
@item
@ref{❨33❩, , @t{name}}@: (generic reader).
@item
@ref{❨35❩, , @t{(setf name)}}@: (generic writer).
@item
@ref{❨109❩, , @t{plist-df}}@: (function).
@item
@ref{❨108❩, , @t{plist-dv}}@: (function).
@item
@ref{❨56❩, , @t{print-array}}@: (function).
@item
@ref{❨24❩, , @t{print-data}}@: (function).
@item
@ref{❨101❩, , @t{print-markdown}}@: (function).
@item
@ref{❨86❩, , @t{real-variable-summary}}@: (structure).
@item
@ref{❨66❩, , @t{remove-column!}}@: (function).
@item
@ref{❨100❩, , @t{remove-columns}}@: (function).
@item
@ref{❨102❩, , @t{rename-column!}}@: (generic function).
@item
@ref{❨75❩, , @t{replace-column}}@: (function).
@item
@ref{❨28❩, , @t{replace-column!}}@: (function).
@item
@ref{❨43❩, , @t{replace-missing}}@: (generic function).
@item
@ref{❨105❩, , @t{rows}}@: (function).
@item
@ref{❨128❩, , @t{set-properties}}@: (function).
@item
@ref{❨99❩, , @t{set-property}}@: (function).
@item
@ref{❨106❩, , @t{short-string}}@: (function).
@item
@ref{❨49❩, , @t{show-data-frames}}@: (function).
@item
@ref{❨47❩, , @t{summarize-column}}@: (function).
@item
@ref{❨93❩, , @t{summary}}@: (function).
@item
@ref{❨123❩, , @t{tail}}@: (generic function).
@item
@ref{❨37❩, , @t{undef}}@: (function).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨161❩, , @t{*data-frames*}}@: (special variable).
@item
@ref{❨186❩, , @t{*max-digits*}}@: (special variable).
@item
@ref{❨197❩, , @t{*row-numbers-p*}}@: (special variable).
@item
@ref{❨227❩, , @t{2d-array-to-list}}@: (function).
@item
@ref{❨195❩, , @t{add-key!}}@: (function).
@item
@ref{❨173❩, , @t{add-keys}}@: (function).
@item
@ref{❨183❩, , @t{aesthetic-string}}@: (function).
@item
@ref{❨172❩, , @t{alist-data}}@: (function).
@item
@ref{❨236❩, , @t{bit-variable-summary-count}}@: (reader).
@item
@ref{❨152❩, , @t{bit-variable-summary-desc}}@: (function).
@item
@ref{❨207❩, , @t{bit-variable-summary-length}}@: (function).
@item
@ref{❨230❩, , @t{bit-variable-summary-missing}}@: (function).
@item
@ref{❨224❩, , @t{bit-variable-summary-name}}@: (function).
@item
@ref{❨169❩, , @t{bit-variable-summary-p}}@: (function).
@item
@ref{❨149❩, , @t{check-column-compatibility}}@: (generic function).
@item
@ref{❨228❩, , @t{column-length}}@: (generic function).
@item
@ref{❨182❩, , @t{column-type-format}}@: (function).
@item
@ref{❨223❩, , @t{copy-bit-variable-summary}}@: (function).
@item
@ref{❨202❩, , @t{copy-factor-variable-summary}}@: (function).
@item
@ref{❨209❩, , @t{copy-generic-variable-summary}}@: (function).
@item
@ref{❨190❩, , @t{copy-ordered-keys}}@: (function).
@item
@ref{❨132❩, , @t{copy-real-variable-summary}}@: (function).
@item
@ref{❨143❩, , @t{copy-variable-summary%}}@: (function).
@item
@ref{❨184❩, , @t{data-frame-exists}}@: (condition).
@item
@ref{❨192❩, , @t{data-size}}@: (generic reader).
@item
@ref{❨221❩, , @t{default-column-formats}}@: (generic function).
@item
@ref{❨145❩, , @t{define-data-subclass}}@: (macro).
@item
@ref{❨211❩, , @t{df-env-p}}@: (function).
@item
@ref{❨139❩, , @t{df-exists-p}}@: (function).
@item
@ref{❨174❩, , @t{distinct}}@: (function).
@item
@ref{❨147❩, , @t{drop-na}}@: (function).
@item
@ref{❨136❩, , @t{ensure-arguments-alist}}@: (function).
@item
@ref{❨205❩, , @t{ensure-not-ratio}}@: (function).
@item
@ref{❨130❩, , @t{ensure-plist}}@: (macro).
@item
@ref{❨175❩, , @t{factor-variable-summary-desc}}@: (function).
@item
@ref{❨210❩, , @t{factor-variable-summary-element-count-alist}}@: (reader).
@item
@ref{❨237❩, , @t{factor-variable-summary-length}}@: (function).
@item
@ref{❨187❩, , @t{factor-variable-summary-missing}}@: (function).
@item
@ref{❨198❩, , @t{factor-variable-summary-name}}@: (function).
@item
@ref{❨231❩, , @t{factor-variable-summary-p}}@: (function).
@item
@ref{❨159❩, , @t{generic-variable-summary-desc}}@: (function).
@item
@ref{❨138❩, , @t{generic-variable-summary-element-count-alist}}@: (reader).
@item
@ref{❨208❩, , @t{generic-variable-summary-length}}@: (function).
@item
@ref{❨148❩, , @t{generic-variable-summary-missing}}@: (function).
@item
@ref{❨241❩, , @t{generic-variable-summary-name}}@: (function).
@item
@ref{❨238❩, , @t{generic-variable-summary-p}}@: (function).
@item
@ref{❨163❩, , @t{generic-variable-summary-quantiles}}@: (reader).
@item
@ref{❨196❩, , @t{get-type}}@: (function).
@item
@ref{❨200❩, , @t{invalid-df-name}}@: (function).
@item
@ref{❨217❩, , @t{key-index}}@: (function).
@item
@ref{❨203❩, , @t{key-list}}@: (function).
@item
@ref{❨158❩, , @t{keys-count}}@: (function).
@item
@ref{❨199❩, , @t{keys-vector}}@: (function).
@item
@ref{❨240❩, , @t{make-bit-variable-summary}}@: (function).
@item
@ref{❨215❩, , @t{make-data}}@: (function).
@item
@ref{❨204❩, , @t{make-factor-variable-summary}}@: (function).
@item
@ref{❨191❩, , @t{make-generic-variable-summary}}@: (function).
@item
@ref{❨226❩, , @t{make-ordered-keys}}@: (function).
@item
@ref{❨162❩, , @t{make-real-variable-summary}}@: (function).
@item
@ref{❨165❩, , @t{make-variable-summary%}}@: (function).
@item
@ref{❨153❩, , @t{max-decimal}}@: (function).
@item
@ref{❨131❩, , @t{max-width}}@: (function).
@item
@ref{❨233❩, , @t{missing-data}}@: (condition).
@item
@ref{❨170❩, , @t{monotonicp}}@: (function).
@item
@ref{❨140❩, , @t{ordered-keys}}@: (function).
@item
@ref{❨141❩, , @t{ordered-keys}}@: (structure).
@item
@ref{❨212❩, , @t{ordered-keys-p}}@: (function).
@item
@ref{❨194❩, , @t{ordered-keys-table}}@: (reader).
@item
@ref{❨188❩, , @t{plist-data}}@: (function).
@item
@ref{❨160❩, , @t{print-count-and-percentage}}@: (function).
@item
@ref{❨144❩, , @t{print-table}}@: (function).
@item
@ref{❨168❩, , @t{printer-status}}@: (function).
@item
@ref{❨220❩, , @t{real-variable-summary-desc}}@: (function).
@item
@ref{❨167❩, , @t{real-variable-summary-length}}@: (function).
@item
@ref{❨135❩, , @t{real-variable-summary-max}}@: (reader).
@item
@ref{❨155❩, , @t{real-variable-summary-mean}}@: (reader).
@item
@ref{❨166❩, , @t{real-variable-summary-min}}@: (reader).
@item
@ref{❨164❩, , @t{real-variable-summary-missing}}@: (function).
@item
@ref{❨201❩, , @t{real-variable-summary-name}}@: (function).
@item
@ref{❨157❩, , @t{real-variable-summary-p}}@: (function).
@item
@ref{❨225❩, , @t{real-variable-summary-q25}}@: (reader).
@item
@ref{❨219❩, , @t{real-variable-summary-q50}}@: (reader).
@item
@ref{❨133❩, , @t{real-variable-summary-q75}}@: (reader).
@item
@ref{❨232❩, , @t{remove-columns!}}@: (function).
@item
@ref{❨213❩, , @t{remove-key!}}@: (function).
@item
@ref{❨137❩, , @t{reverse-df}}@: (function).
@item
@ref{❨206❩, , @t{show-properties}}@: (function).
@item
@ref{❨214❩, , @t{show-symbols}}@: (function).
@item
@ref{❨218❩, , @t{summarize-factor-variable}}@: (function).
@item
@ref{❨146❩, , @t{summarize-generic-variable}}@: (function).
@item
@ref{❨189❩, , @t{summarize-real-variable}}@: (function).
@item
@ref{❨156❩, , @t{types-in-column}}@: (function).
@item
@ref{❨177❩, , @t{variable-summary%}}@: (structure).
@item
@ref{❨154❩, , @t{variable-summary%-desc}}@: (reader).
@item
@ref{❨171❩, , @t{variable-summary%-length}}@: (reader).
@item
@ref{❨216❩, , @t{variable-summary%-missing}}@: (reader).
@item
@ref{❨239❩, , @t{variable-summary%-name}}@: (reader).
@item
@ref{❨176❩, , @t{variable-summary%-p}}@: (function).
@item
@ref{❨134❩, , @t{weave}}@: (function).
@end itemize
@end table


@c -----------------
@c The rdata package
@c -----------------
@node The rdata package, , The data-frame package, Packages
@section @t{rdata}
@anchor{❨18❩}@c
@packageindex{rdata}@c
@table @strong
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@item Use List
@t{common-lisp}.
@item Public Interface
@itemize @bullet
@item
@ref{❨259❩, , @t{*r-default-datasets*}}@: (special variable).
@item
@ref{❨318❩, , @t{ability.cov}}@: (special variable).
@item
@ref{❨299❩, , @t{airmiles}}@: (special variable).
@item
@ref{❨325❩, , @t{airpassengers}}@: (special variable).
@item
@ref{❨311❩, , @t{airquality}}@: (special variable).
@item
@ref{❨289❩, , @t{anscombe}}@: (special variable).
@item
@ref{❨326❩, , @t{attenu}}@: (special variable).
@item
@ref{❨271❩, , @t{attitude}}@: (special variable).
@item
@ref{❨282❩, , @t{austres}}@: (special variable).
@item
@ref{❨260❩, , @t{base-url}}@: (special variable).
@item
@ref{❨303❩, , @t{bjsales}}@: (special variable).
@item
@ref{❨286❩, , @t{bod}}@: (special variable).
@item
@ref{❨242❩, , @t{cars}}@: (special variable).
@item
@ref{❨320❩, , @t{chickweight}}@: (special variable).
@item
@ref{❨278❩, , @t{chickwts}}@: (special variable).
@item
@ref{❨251❩, , @t{co2-1}}@: (special variable).
@item
@ref{❨314❩, , @t{co2-2}}@: (special variable).
@item
@ref{❨316❩, , @t{crimtab}}@: (special variable).
@item
@ref{❨263❩, , @t{discoveries}}@: (special variable).
@item
@ref{❨298❩, , @t{dnase}}@: (special variable).
@item
@ref{❨304❩, , @t{esoph}}@: (special variable).
@item
@ref{❨309❩, , @t{euro}}@: (special variable).
@item
@ref{❨243❩, , @t{eustockmarkets}}@: (special variable).
@item
@ref{❨255❩, , @t{faithful}}@: (special variable).
@item
@ref{❨248❩, , @t{formaldehyde}}@: (special variable).
@item
@ref{❨276❩, , @t{freeny}}@: (special variable).
@item
@ref{❨252❩, , @t{haireyecolor}}@: (special variable).
@item
@ref{❨287❩, , @t{harman23.cor}}@: (special variable).
@item
@ref{❨312❩, , @t{harman74.cor}}@: (special variable).
@item
@ref{❨270❩, , @t{index}}@: (special variable).
@item
@ref{❨293❩, , @t{indometh}}@: (special variable).
@item
@ref{❨292❩, , @t{infert}}@: (special variable).
@item
@ref{❨277❩, , @t{insectsprays}}@: (special variable).
@item
@ref{❨330❩, , @t{iris}}@: (special variable).
@item
@ref{❨267❩, , @t{iris3}}@: (special variable).
@item
@ref{❨246❩, , @t{islands}}@: (special variable).
@item
@ref{❨331❩, , @t{johnsonjohnson}}@: (special variable).
@item
@ref{❨257❩, , @t{lakehuron}}@: (special variable).
@item
@ref{❨283❩, , @t{lh}}@: (special variable).
@item
@ref{❨323❩, , @t{lifecyclesavings}}@: (special variable).
@item
@ref{❨307❩, , @t{loblolly}}@: (special variable).
@item
@ref{❨313❩, , @t{longley}}@: (special variable).
@item
@ref{❨250❩, , @t{lynx}}@: (special variable).
@item
@ref{❨275❩, , @t{morley}}@: (special variable).
@item
@ref{❨281❩, , @t{mpg}}@: (special variable).
@item
@ref{❨295❩, , @t{mtcars}}@: (special variable).
@item
@ref{❨285❩, , @t{nhtemp}}@: (special variable).
@item
@ref{❨306❩, , @t{nile}}@: (special variable).
@item
@ref{❨288❩, , @t{nottem}}@: (special variable).
@item
@ref{❨266❩, , @t{npk}}@: (special variable).
@item
@ref{❨327❩, , @t{nycflights13-airlines}}@: (special variable).
@item
@ref{❨279❩, , @t{nycflights13-airports}}@: (special variable).
@item
@ref{❨300❩, , @t{nycflights13-flights}}@: (special variable).
@item
@ref{❨244❩, , @t{nycflights13-planes}}@: (special variable).
@item
@ref{❨333❩, , @t{nycflights13-weather}}@: (special variable).
@item
@ref{❨280❩, , @t{occupationalstatus}}@: (special variable).
@item
@ref{❨317❩, , @t{orange}}@: (special variable).
@item
@ref{❨310❩, , @t{orchardsprays}}@: (special variable).
@item
@ref{❨256❩, , @t{plantgrowth}}@: (special variable).
@item
@ref{❨328❩, , @t{precip}}@: (special variable).
@item
@ref{❨329❩, , @t{presidents}}@: (special variable).
@item
@ref{❨254❩, , @t{pressure}}@: (special variable).
@item
@ref{❨268❩, , @t{puromycin}}@: (special variable).
@item
@ref{❨272❩, , @t{quakes}}@: (special variable).
@item
@ref{❨322❩, , @t{randu}}@: (special variable).
@item
@ref{❨264❩, , @t{rivers}}@: (special variable).
@item
@ref{❨332❩, , @t{rock}}@: (special variable).
@item
@ref{❨245❩, , @t{seatbelts}}@: (special variable).
@item
@ref{❨273❩, , @t{stackloss}}@: (special variable).
@item
@ref{❨247❩, , @t{sunspot.month}}@: (special variable).
@item
@ref{❨265❩, , @t{sunspot.year}}@: (special variable).
@item
@ref{❨297❩, , @t{sunspots}}@: (special variable).
@item
@ref{❨262❩, , @t{swiss}}@: (special variable).
@item
@ref{❨291❩, , @t{theoph}}@: (special variable).
@item
@ref{❨261❩, , @t{titanic}}@: (special variable).
@item
@ref{❨269❩, , @t{toothgrowth}}@: (special variable).
@item
@ref{❨290❩, , @t{treering}}@: (special variable).
@item
@ref{❨302❩, , @t{trees}}@: (special variable).
@item
@ref{❨301❩, , @t{ucbadmissions}}@: (special variable).
@item
@ref{❨315❩, , @t{ukdriverdeaths}}@: (special variable).
@item
@ref{❨296❩, , @t{ukgas}}@: (special variable).
@item
@ref{❨319❩, , @t{usaccdeaths}}@: (special variable).
@item
@ref{❨324❩, , @t{usarrests}}@: (special variable).
@item
@ref{❨253❩, , @t{usjudgeratings}}@: (special variable).
@item
@ref{❨249❩, , @t{uspersonalexpenditure}}@: (special variable).
@item
@ref{❨305❩, , @t{uspop}}@: (special variable).
@item
@ref{❨274❩, , @t{vadeaths}}@: (special variable).
@item
@ref{❨308❩, , @t{volcano}}@: (special variable).
@item
@ref{❨294❩, , @t{warpbreaks}}@: (special variable).
@item
@ref{❨258❩, , @t{women}}@: (special variable).
@item
@ref{❨321❩, , @t{worldphones}}@: (special variable).
@item
@ref{❨284❩, , @t{wwwusage}}@: (special variable).
@end itemize
@item Internals
@itemize @bullet
@item
@ref{❨334❩, , @t{*r-default-dataframes*}}@: (special variable).
@item
@ref{❨335❩, , @t{student-sleep}}@: (special variable).
@end itemize
@end table



@c ====================================================================
@c Definitions
@c ====================================================================
@node Definitions, Indexes, Packages, Top
@chapter Definitions
Definitions are sorted by export status, category, package, and then by
lexicographic order.

@menu
* Public Interface::
* Internals::
@end menu


@c ----------------
@c Public Interface
@c ----------------
@node Public Interface, Internals, Definitions, Definitions
@section Public Interface
@menu
* Public special variables::
* Public macros::
* Public ordinary functions::
* Public generic functions::
* Public standalone methods::
* Public conditions::
* Public structures::
* Public classes::
* Public types::
@end menu

@node Public special variables, Public macros, Public Interface, Public Interface
@subsection Special variables
@defvr {Special Variable} {*ask-on-redefine*}
@anchor{❨97❩}@c
@specialsubindex{*ask-on-redefine*}@c
If non-nil@comma{} the system will ask the user for confirmation before redefining a data frame
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨9❩, , @t{defdf.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*distinct-maximum*}
@anchor{❨38❩}@c
@specialsubindex{*distinct-maximum*}@c
If a string/factor variable has > *distinct-maximum* values@comma{} exclude it
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*distinct-threshold*}
@anchor{❨57❩}@c
@specialsubindex{*distinct-threshold*}@c
If an integer variable has <= discrete values@comma{} consider it a factor
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*large-data*}
@anchor{❨45❩}@c
@specialsubindex{*large-data*}@c
An indication that the data set is large for a particular use case.@*
This should be bound by a user to the maximum number of data points they consider to be 'normal'. The function can then signal a large-data warning if it is exceeded.

E.g. (let ((df:*large-data* 50000))@*
       (handler-bind ((large-data ...@*
          (some-data-operation ; this will signal if the data is too large@*
            (restart-bind ...
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*quantile-threshold*}
@anchor{❨20❩}@c
@specialsubindex{*quantile-threshold*}@c
If the number of unique reals exceeds this threshold@comma{} they will be summarized with quantiles@comma{} otherwise print frequency table
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*r-default-datasets*}
@anchor{❨259❩}@c
@specialsubindex{*r-default-datasets*}@c
All data sets included by default in R
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*summary-minimum-length*}
@anchor{❨85❩}@c
@specialsubindex{*summary-minimum-length*}@c
Columns are only summarised when longer than this@comma{} otherwise they are returned as is.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {ability.cov}
@anchor{❨318❩}@c
@specialsubindex{ability.cov}@c
Ability and Intelligence Tests
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {airmiles}
@anchor{❨299❩}@c
@specialsubindex{airmiles}@c
Passenger Miles on Commercial US Airlines@comma{} 1937-1960
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {airpassengers}
@anchor{❨325❩}@c
@specialsubindex{airpassengers}@c
Monthly Airline Passenger Numbers 1949-1960
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {airquality}
@anchor{❨311❩}@c
@specialsubindex{airquality}@c
New York Air Quality Measurements
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {anscombe}
@anchor{❨289❩}@c
@specialsubindex{anscombe}@c
Anscombe's Quartet of 'Identical' Simple Linear Regressions
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {attenu}
@anchor{❨326❩}@c
@specialsubindex{attenu}@c
The Joyner-Boore Attenuation Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {attitude}
@anchor{❨271❩}@c
@specialsubindex{attitude}@c
The Chatterjee-Price Attitude Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {austres}
@anchor{❨282❩}@c
@specialsubindex{austres}@c
Quarterly Time Series of the Number of Australian Residents
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {base-url}
@anchor{❨260❩}@c
@specialsubindex{base-url}@c
Base URL for datasets included in R
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {bjsales}
@anchor{❨303❩}@c
@specialsubindex{bjsales}@c
Sales Data with Leading Indicator
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {bod}
@anchor{❨286❩}@c
@specialsubindex{bod}@c
Biochemical Oxygen Demand
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {cars}
@anchor{❨242❩}@c
@specialsubindex{cars}@c
Speed and Stopping Distances of Cars
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {chickweight}
@anchor{❨320❩}@c
@specialsubindex{chickweight}@c
Weight versus age of chicks on different diets
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {chickwts}
@anchor{❨278❩}@c
@specialsubindex{chickwts}@c
Chicken Weights by Feed Type
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {co2-1}
@anchor{❨251❩}@c
@specialsubindex{co2-1}@c
Carbon Dioxide Uptake in Grass Plants
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {co2-2}
@anchor{❨314❩}@c
@specialsubindex{co2-2}@c
Mauna Loa Atmospheric CO2 Concentration
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {crimtab}
@anchor{❨316❩}@c
@specialsubindex{crimtab}@c
Student's 3000 Criminals Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {discoveries}
@anchor{❨263❩}@c
@specialsubindex{discoveries}@c
Yearly Numbers of Important Discoveries
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {dnase}
@anchor{❨298❩}@c
@specialsubindex{dnase}@c
Elisa assay of DNase
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {esoph}
@anchor{❨304❩}@c
@specialsubindex{esoph}@c
Smoking@comma{} Alcohol and (O)esophageal Cancer
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {euro}
@anchor{❨309❩}@c
@specialsubindex{euro}@c
Conversion Rates of Euro Currencies
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {eustockmarkets}
@anchor{❨243❩}@c
@specialsubindex{eustockmarkets}@c
Daily Closing Prices of Major European Stock Indices@comma{} 1991-1998
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {faithful}
@anchor{❨255❩}@c
@specialsubindex{faithful}@c
Old Faithful Geyser Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {formaldehyde}
@anchor{❨248❩}@c
@specialsubindex{formaldehyde}@c
Determination of Formaldehyde
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {freeny}
@anchor{❨276❩}@c
@specialsubindex{freeny}@c
Freeny's Revenue Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {haireyecolor}
@anchor{❨252❩}@c
@specialsubindex{haireyecolor}@c
Hair and Eye Color of Statistics Students
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {harman23.cor}
@anchor{❨287❩}@c
@specialsubindex{harman23.cor}@c
Harman Example 2.3
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {harman74.cor}
@anchor{❨312❩}@c
@specialsubindex{harman74.cor}@c
Harman Example 7.4
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {index}
@anchor{❨270❩}@c
@specialsubindex{index}@c
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {indometh}
@anchor{❨293❩}@c
@specialsubindex{indometh}@c
Pharmacokinetics of Indomethacin
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {infert}
@anchor{❨292❩}@c
@specialsubindex{infert}@c
Infertility after Spontaneous and Induced Abortion
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {insectsprays}
@anchor{❨277❩}@c
@specialsubindex{insectsprays}@c
Effectiveness of Insect Sprays
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {iris}
@anchor{❨330❩}@c
@specialsubindex{iris}@c
Edgar Anderson's Iris Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {iris3}
@anchor{❨267❩}@c
@specialsubindex{iris3}@c
Edgar Anderson's Iris Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {islands}
@anchor{❨246❩}@c
@specialsubindex{islands}@c
Areas of the World's Major Landmasses
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {johnsonjohnson}
@anchor{❨331❩}@c
@specialsubindex{johnsonjohnson}@c
Quarterly Earnings per Johnson @ampchar{} Johnson Share
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {lakehuron}
@anchor{❨257❩}@c
@specialsubindex{lakehuron}@c
Level of Lake Huron 1875-1972
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {lh}
@anchor{❨283❩}@c
@specialsubindex{lh}@c
Luteinizing Hormone in Blood Samples
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {lifecyclesavings}
@anchor{❨323❩}@c
@specialsubindex{lifecyclesavings}@c
Intercountry Life-Cycle Savings Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {loblolly}
@anchor{❨307❩}@c
@specialsubindex{loblolly}@c
Growth of Loblolly pine trees
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {longley}
@anchor{❨313❩}@c
@specialsubindex{longley}@c
Longley's Economic Regression Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {lynx}
@anchor{❨250❩}@c
@specialsubindex{lynx}@c
Annual Canadian Lynx trappings 1821-1934
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {morley}
@anchor{❨275❩}@c
@specialsubindex{morley}@c
Michelson Speed of Light Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {mpg}
@anchor{❨281❩}@c
@specialsubindex{mpg}@c
Fuel economy data from 1999 to 2008 for 38 popular models of cars
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {mtcars}
@anchor{❨295❩}@c
@specialsubindex{mtcars}@c
Motor Trend Car Road Tests
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {nhtemp}
@anchor{❨285❩}@c
@specialsubindex{nhtemp}@c
Average Yearly Temperatures in New Haven
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {nile}
@anchor{❨306❩}@c
@specialsubindex{nile}@c
Flow of the River Nile
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {nottem}
@anchor{❨288❩}@c
@specialsubindex{nottem}@c
Average Monthly Temperatures at Nottingham@comma{} 1920-1939
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {npk}
@anchor{❨266❩}@c
@specialsubindex{npk}@c
Classical N@comma{} P@comma{} K Factorial Experiment
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {nycflights13-airlines}
@anchor{❨327❩}@c
@specialsubindex{nycflights13-airlines}@c
Airline name lookup table by carrier code
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {nycflights13-airports}
@anchor{❨279❩}@c
@specialsubindex{nycflights13-airports}@c
Airport metadata
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {nycflights13-flights}
@anchor{❨300❩}@c
@specialsubindex{nycflights13-flights}@c
On-time data for all flights that departed NYC (i.e. JFK@comma{} LGA or EWR) in 2013
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {nycflights13-planes}
@anchor{❨244❩}@c
@specialsubindex{nycflights13-planes}@c
Metadata for all airplane tail numbers found in the FAA aircraft registry
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {nycflights13-weather}
@anchor{❨333❩}@c
@specialsubindex{nycflights13-weather}@c
Hourly meterological data for LGA@comma{} JFK and EWR in 2013
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {occupationalstatus}
@anchor{❨280❩}@c
@specialsubindex{occupationalstatus}@c
Occupational Status of Fathers and their Sons
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {orange}
@anchor{❨317❩}@c
@specialsubindex{orange}@c
Growth of Orange Trees
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {orchardsprays}
@anchor{❨310❩}@c
@specialsubindex{orchardsprays}@c
Potency of Orchard Sprays
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {plantgrowth}
@anchor{❨256❩}@c
@specialsubindex{plantgrowth}@c
Results from an Experiment on Plant Growth
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {precip}
@anchor{❨328❩}@c
@specialsubindex{precip}@c
Annual Precipitation in US Cities
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {presidents}
@anchor{❨329❩}@c
@specialsubindex{presidents}@c
Quarterly Approval Ratings of US Presidents
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {pressure}
@anchor{❨254❩}@c
@specialsubindex{pressure}@c
Vapor Pressure of Mercury as a Function of Temperature
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {puromycin}
@anchor{❨268❩}@c
@specialsubindex{puromycin}@c
Reaction Velocity of an Enzymatic Reaction
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {quakes}
@anchor{❨272❩}@c
@specialsubindex{quakes}@c
Locations of Earthquakes off Fiji
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {randu}
@anchor{❨322❩}@c
@specialsubindex{randu}@c
Random Numbers from Congruential Generator RANDU
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {rivers}
@anchor{❨264❩}@c
@specialsubindex{rivers}@c
Lengths of Major North American Rivers
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {rock}
@anchor{❨332❩}@c
@specialsubindex{rock}@c
Measurements on Petroleum Rock Samples
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {seatbelts}
@anchor{❨245❩}@c
@specialsubindex{seatbelts}@c
Road Casualties in Great Britain 1969-84
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {stackloss}
@anchor{❨273❩}@c
@specialsubindex{stackloss}@c
Brownlee's Stack Loss Plant Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {sunspot.month}
@anchor{❨247❩}@c
@specialsubindex{sunspot.month}@c
Monthly Sunspot Data@comma{} from 1749 to Present
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {sunspot.year}
@anchor{❨265❩}@c
@specialsubindex{sunspot.year}@c
Yearly Sunspot Data@comma{} 1700-1988
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {sunspots}
@anchor{❨297❩}@c
@specialsubindex{sunspots}@c
Monthly Sunspot Numbers@comma{} 1749-1983
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {swiss}
@anchor{❨262❩}@c
@specialsubindex{swiss}@c
Swiss Fertility and Socioeconomic Indicators (1888) Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {theoph}
@anchor{❨291❩}@c
@specialsubindex{theoph}@c
Pharmacokinetics of Theophylline
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {titanic}
@anchor{❨261❩}@c
@specialsubindex{titanic}@c
Survival of passengers on the Titanic
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {toothgrowth}
@anchor{❨269❩}@c
@specialsubindex{toothgrowth}@c
The Effect of Vitamin C on Tooth Growth in Guinea Pigs
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {treering}
@anchor{❨290❩}@c
@specialsubindex{treering}@c
Yearly Treering Data@comma{} -6000-1979
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {trees}
@anchor{❨302❩}@c
@specialsubindex{trees}@c
Diameter@comma{} Height and Volume for Black Cherry Trees
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {ucbadmissions}
@anchor{❨301❩}@c
@specialsubindex{ucbadmissions}@c
Student Admissions at UC Berkeley
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {ukdriverdeaths}
@anchor{❨315❩}@c
@specialsubindex{ukdriverdeaths}@c
Road Casualties in Great Britain 1969-84
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {ukgas}
@anchor{❨296❩}@c
@specialsubindex{ukgas}@c
UK Quarterly Gas Consumption
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {usaccdeaths}
@anchor{❨319❩}@c
@specialsubindex{usaccdeaths}@c
Accidental Deaths in the US 1973-1978
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {usarrests}
@anchor{❨324❩}@c
@specialsubindex{usarrests}@c
Violent Crime Rates by US State
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {usjudgeratings}
@anchor{❨253❩}@c
@specialsubindex{usjudgeratings}@c
Lawyers' Ratings of State Judges in the US Superior Court
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {uspersonalexpenditure}
@anchor{❨249❩}@c
@specialsubindex{uspersonalexpenditure}@c
Personal Expenditure Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {uspop}
@anchor{❨305❩}@c
@specialsubindex{uspop}@c
Populations Recorded by the US Census
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {vadeaths}
@anchor{❨274❩}@c
@specialsubindex{vadeaths}@c
Death Rates in Virginia (1940)
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {volcano}
@anchor{❨308❩}@c
@specialsubindex{volcano}@c
Topographic Information on Auckland's Maunga Whau Volcano
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {warpbreaks}
@anchor{❨294❩}@c
@specialsubindex{warpbreaks}@c
The Number of Breaks in Yarn during Weaving
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {women}
@anchor{❨258❩}@c
@specialsubindex{women}@c
Average Heights and Weights for American Women
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {worldphones}
@anchor{❨321❩}@c
@specialsubindex{worldphones}@c
The World's Telephones
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {wwwusage}
@anchor{❨284❩}@c
@specialsubindex{wwwusage}@c
Internet Usage per Minute
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr

@node Public macros, Public ordinary functions, Public special variables, Public Interface
@subsection Macros
@deffn {Macro} {defdf} (name data &optional documentation)
@anchor{❨30❩}@c
@macrosubindex{defdf}@c
Define a data-frame and package by the same name.@*
Also defines symbol-macros for variable access@comma{} e.g. mtcars:mpg
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨9❩, , @t{defdf.lisp}}.
@end table
@end deffn
@deffn {Macro} {delete-nth*} (place n)
@anchor{❨127❩}@c
@macrosubindex{delete-nth*}@c
Destructively modifies N@comma{} a SEQUENCE by removing the Nth item.
Example:@*
    LS-USER> (defparameter *v* @hashchar{}(a b c d))@*
    *V*@*
    LS-USER> (delete-nth* *v* 1)@*
    @hashchar{}(A C D)@*
    LS-USER> *v*@*
    @hashchar{}(A C D)
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨4❩, , @t{utils.lisp}}.
@end table
@end deffn

@node Public ordinary functions, Public generic functions, Public macros, Public Interface
@subsection Ordinary functions
@deffn {Function} {add-column!} (data key column &optional update-env)
@anchor{❨39❩}@c
@functionsubindex{add-column!}@c
Modify DATA (a data-frame or data-vector) by adding COLUMN with KEY.  Return DATA.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {add-columns} (data &rest keys-and-columns)
@anchor{❨21❩}@c
@functionsubindex{add-columns}@c
Return a new data-frame or data-vector with keys and columns added.  Does not modify DATA.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {add-columns!} (data &rest keys-and-columns)
@anchor{❨126❩}@c
@functionsubindex{add-columns!}@c
Modify DATA (a data-frame or data-vector) by adding columns with keys.
If a data-frame environment exists@comma{} add columns to it as well.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {alist-df} (alist)
@anchor{❨77❩}@c
@functionsubindex{alist-df}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {alist-dv} (alist)
@anchor{❨67❩}@c
@functionsubindex{alist-dv}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {column} (data key)
@anchor{❨53❩}@c
@functionsubindex{column}@c
Return column corresponding to key.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {(setf column)} (data key)
@anchor{❨54❩}@c
@functionsubindex{(setf column)}@c
Set column corresponding to key.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {column-names} (df)
@anchor{❨42❩}@c
@functionsubindex{column-names}@c
Return a list of column names in DF@comma{} as strings
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {column-type} (col)
@anchor{❨46❩}@c
@functionsubindex{column-type}@c
Return the most specific type found in COL
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨4❩, , @t{utils.lisp}}.
@end table
@end deffn
@deffn {Function} {columns} (data &optional slice)
@anchor{❨81❩}@c
@functionsubindex{columns}@c
Return the columns of DATA as a vector@comma{} or a selection if given (keys are resolved).
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {copy} (data &key key)
@anchor{❨76❩}@c
@functionsubindex{copy}@c
Copy data frame or vector.  Keys are copied (and thus can be modified)@comma{} columns or elements are copied using KEY@comma{} making the default give a shallow copy.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {count-rows} (data-frame keys predicate)
@anchor{❨58❩}@c
@functionsubindex{count-rows}@c
Count the number of rows for which PREDICATE called on the columns corresponding to KEYS returns non-NIL.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {data} (d &key system directory type)
@anchor{❨70❩}@c
@functionsubindex{data}@c
Load a data frame from a CSV or LISP data source located on the local filesystem named by D.  Intended for example data sets for Lisp-Stat system.  Parameters may be either a KEYWORD or STRING.  JSON files require application specific loaders@comma{} so not handled here.  Use (read-vega ...) for example.

Description@*
Each package using lisp-stat should define its own logical host@comma{} and a directory called DATA.  Once done@comma{} you can load  the example data sets like so:@*

LS-USER> (data my-example :system :glimpse)@*

If the system is named GLIMPSE.  To load a data set from R@comma{} assuming you have configured a logical host@comma{} RDATA:@*

LS-USER> (data :antigua :system :rdata :directory :daag :type :csv)
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨15❩, , @t{data.lisp}}.
@end table
@end deffn
@deffn {Function} {defdf-env} (data-frame old-keys)
@anchor{❨22❩}@c
@functionsubindex{defdf-env}@c
Create a package with the same name as DATA-FRAME.  Within it@comma{} create a symbol-macro for each column that will return the columns value.
Can also be used to remove and update the environment as the DATA-FRAME changes in destructive operations
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨9❩, , @t{defdf.lisp}}.
@end table
@end deffn
@deffn {Function} {delete-nth} (sequence n)
@anchor{❨55❩}@c
@functionsubindex{delete-nth}@c
Return SEQUENCE with the Nth item removed.@*
Note: DELETE-IF makes no guarantee of being destructive@comma{} so you cannot rely on this side-effect.  You must SETF the original sequence to the values returned from this function@comma{} or use the modify-macro DELETE-NTH*
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨4❩, , @t{utils.lisp}}.
@end table
@end deffn
@deffn {Function} {df} (&rest plist-or-alist)
@anchor{❨29❩}@c
@functionsubindex{df}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {df-print} (df)
@anchor{❨27❩}@c
@functionsubindex{df-print}@c
Print DF to *standard-output* in table format
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨7❩, , @t{formatted-output.lisp}}.
@end table
@end deffn
@deffn {Function} {df-remove-duplicates} (data)
@anchor{❨65❩}@c
@functionsubindex{df-remove-duplicates}@c
Return a modified copy of DATA from which any element (row@comma{} if a DATA-FRAME) that matches another element has been removed
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {do-rows} (data-frame keys function)
@anchor{❨96❩}@c
@functionsubindex{do-rows}@c
Traverse rows from first to last@comma{} calling FUNCTION on the columns corresponding to KEYS.  Return no values.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {dv} (&rest plist-or-alist)
@anchor{❨32❩}@c
@functionsubindex{dv}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {filter-rows} (data body)
@anchor{❨26❩}@c
@functionsubindex{filter-rows}@c
Filter DATA by a predicate given in BODY@*

Example@*
   (data :mtcars) ; load a data set@*
   (head mtcars)  ; view first 6 rows@*

;;   MODEL              MPG CYL DISP  HP DRAT    WT  QSEC VS AM GEAR CARB
;; 0 Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
;; 1 Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
;; 2 Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
;; 3 Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
;; 4 Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
;; 5 Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1

   (filter-rows mtcars '(< mpg 17))@*
   @hashchar{}<DATA-FRAME (11 observations of 12 variables)>@*

   (head *) ; view first 6 rows of filtered data frame@*

;;   MODEL                MPG CYL  DISP  HP DRAT    WT  QSEC VS AM GEAR CARB
;; 0 Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
;; 1 Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
;; 2 Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
;; 3 Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
;; 4 Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
;; 5 Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨13❩, , @t{filter.lisp}}.
@end table
@end deffn
@deffn {Function} {get-property} (variable property)
@anchor{❨107❩}@c
@functionsubindex{get-property}@c
Return the PROPERTY of data VARIABLE
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨11❩, , @t{properties.lisp}}.
@end table
@end deffn
@deffn {Function} {get-summaries} (df)
@anchor{❨129❩}@c
@functionsubindex{get-summaries}@c
Return a list of summaries of the variables in DF
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {heuristicate-types} (df)
@anchor{❨31❩}@c
@functionsubindex{heuristicate-types}@c
Coerce each element of the column vectors to the most specific type in the column@*
Often when reading in a data set@comma{} the types will be inconsistent in a variable.  For example one observation might be 5.1@comma{} and another 5.  Whilst mathmatically equivalent@comma{} we want our variable vectors to have identical types.  The COLUMN-TYPE function returns the most specific numeric type in the column@comma{} then coerces all the vector elements to this type
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨11❩, , @t{properties.lisp}}.
@end table
@end deffn
@deffn {Function} {ignore-missing} (function &key warn-user provide-restart)
@anchor{❨104❩}@c
@functionsubindex{ignore-missing}@c
Wrap FUNCTION in a closure that removes missing values and applys FUNCTION in case any of the arguments are :MISSING@comma{} :NA or NIL to arguments.  Intended for functions accepting vectors.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨12❩, , @t{missing.lisp}}.
@end table
@end deffn
@deffn {Function} {keys} (data)
@anchor{❨80❩}@c
@functionsubindex{keys}@c
Return a vector of keys.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {make-df} (keys columns)
@anchor{❨94❩}@c
@functionsubindex{make-df}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {make-dv} (keys columns)
@anchor{❨98❩}@c
@functionsubindex{make-dv}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {map-columns} (data function &optional result-class)
@anchor{❨95❩}@c
@functionsubindex{map-columns}@c
Map columns of DATA-FRAME or DATA-VECTOR using FUNCTION.  The result is a new DATA-FRAME with the same keys.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {map-df} (data-frame keys function result-keys)
@anchor{❨23❩}@c
@functionsubindex{map-df}@c
Map DATA-FRAME to another one by rows.  Function is called on the columns corresponding to KEYS@comma{} and should return a sequence with the same length as RESULT-KEYS@comma{} which give the keys of the resulting data frame.  RESULT-KETS should be either symbols@comma{} or of the format (symbol @ampchar{}optional (element-type t)).
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {map-rows} (data-frame keys function &key element-type)
@anchor{❨84❩}@c
@functionsubindex{map-rows}@c
Map rows using FUNCTION@comma{} on the columns corresponding to KEYS.  Return the result with the given ELEMENT-TYPE.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {mask-rows} (data-frame keys predicate)
@anchor{❨19❩}@c
@functionsubindex{mask-rows}@c
Return a bit-vector containing the result of calling PREDICATE on rows of the columns corresponding to KEYS (0 for NIL@comma{} 1 otherwise).
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {matrix-df} (keys matrix)
@anchor{❨25❩}@c
@functionsubindex{matrix-df}@c
Convert a matrix to a data-frame with the given keys.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {plist-df} (plist)
@anchor{❨109❩}@c
@functionsubindex{plist-df}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {plist-dv} (plist)
@anchor{❨108❩}@c
@functionsubindex{plist-dv}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {print-array} (arr &optional stream row-numbers-p)
@anchor{❨56❩}@c
@functionsubindex{print-array}@c
Print an array to STREAM@comma{} defaulting to *standard-output*@comma{} in a tabular format.  If ROW-NUMBERS-P@comma{} print row numbers.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {print-data} (data-frame &optional stream row-numbers-p max-digits)
@anchor{❨24❩}@c
@functionsubindex{print-data}@c
Print DATA-FRAME to STREAM using the pretty printer
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {print-markdown} (df &key stream row-numbers)
@anchor{❨101❩}@c
@functionsubindex{print-markdown}@c
Print data frame DF@comma{} in markdown format@comma{} to STREAM@*
If ROW-NUMBERS is true@comma{} also print row numbers as the first column
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨7❩, , @t{formatted-output.lisp}}.
@end table
@end deffn
@deffn {Function} {remove-column!} (data key)
@anchor{❨66❩}@c
@functionsubindex{remove-column!}@c
Modify DATA (a data-frame or data-vector) by removing COLUMN with KEY.  Return DATA.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {remove-columns} (data keys)
@anchor{❨100❩}@c
@functionsubindex{remove-columns}@c
Return a new data-frame or data-vector with keys and columns removed.  Does not modify DATA.
ARGS: DATA data frame@*
      KEYS list of keys (variables) to be removed
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {replace-column} (data key function-or-column &key element-type)
@anchor{❨75❩}@c
@functionsubindex{replace-column}@c
Create a new data frame with new column KEY from data-frame DATA by replacing it either with the given column@comma{} or applying the function to the current values (ELEMENT-TYPE is used.)
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {replace-column!} (data key function-or-column &key element-type)
@anchor{❨28❩}@c
@functionsubindex{replace-column!}@c
Modify column KEY of data-frame DATA by replacing it either with the given column@comma{} or applying the function to the current values (ELEMENT-TYPE is used.)
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {rows} (data)
@anchor{❨105❩}@c
@functionsubindex{rows}@c
Return the rows of DATA as a vector
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {set-properties} (df property prop-values)
@anchor{❨128❩}@c
@functionsubindex{set-properties}@c
Set the PROPERTY of each variable in DF to a value.  The value is specified in the plist PROP-VALUES.
Example:@*
  To give the variables in the mtcars dataset a unit@comma{} use:@*
  (set-properties mtcars :unit '(:mpg  m/g@*
			         :cyl  :NA@*
			         :disp in³@*
			         :hp   hp@*
			         :drat :NA@*
			         :wt   lb@*
			         :qsec s@*
			         :vs   :NA@*
			         :am   :NA@*
			         :gear :NA@*
			         :carb :NA))
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨11❩, , @t{properties.lisp}}.
@end table
@end deffn
@deffn {Function} {set-property} (symbol value property)
@anchor{❨99❩}@c
@functionsubindex{set-property}@c
Set the PROPERTY of SYMBOL to VALUE
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨11❩, , @t{properties.lisp}}.
@end table
@end deffn
@deffn {Function} {short-string} (str)
@anchor{❨106❩}@c
@functionsubindex{short-string}@c
Return up to the first newline@*
This is useful when docstrings are multi-line.  By convention@comma{} the first line is the title.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {show-data-frames} (&key head stream)
@anchor{❨49❩}@c
@functionsubindex{show-data-frames}@c
Print all data frames in the current environment in reverse order of creation@comma{} i.e. most recently created first.
If HEAD is not NIL@comma{} print the first six rows@comma{} similar to the (head) function
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨9❩, , @t{defdf.lisp}}.
@end table
@end deffn
@deffn {Function} {summarize-column} (column &optional name)
@anchor{❨47❩}@c
@functionsubindex{summarize-column}@c
Return a summary struct for COLUMN
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {summary} (df &optional stream)
@anchor{❨93❩}@c
@functionsubindex{summary}@c
Print a summary of DF to STREAM@comma{} using heuristics for better formatting
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {undef} (&rest params)
@anchor{❨37❩}@c
@functionsubindex{undef}@c
Remove one or more data frames from the environment@*
PARAMS: a list of DATA-FRAMEs@*

Essentially reverses what DEFDF does.  Returns the data frames that were removed.  Don't use this if you have a data frame bound via DEFPARAMETER.
Examples:@*
    (undef mtcars vlcars)
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨9❩, , @t{defdf.lisp}}.
@end table
@end deffn

@node Public generic functions, Public standalone methods, Public ordinary functions, Public Interface
@subsection Generic functions
@deffn {Generic Reader} {data-frame} (condition)
@anchor{❨50❩}@c
@genericsubindex{data-frame}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Reader Method} {data-frame} ((condition @ref{❨184❩, , @t{data-frame-exists}}))
@anchor{❨51❩}@c
@methodsubindex{data-frame}@c
@table @strong
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@item Target Slot
@ref{❨185❩, , @t{data-frame}}.
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {drop-missing} (df &optional predicate)
@anchor{❨118❩}@c
@genericsubindex{drop-missing}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Method} {drop-missing} ((var @t{vector}) &optional predicate)
@anchor{❨119❩}@c
@methodsubindex{drop-missing}@c
Remove all values from VAR that are missing according to PREDICATE.
Returns values:@*
   1. the vector with missing values removed@*
   2. the number of elements removed
@table @strong
@item Source
@ref{❨12❩, , @t{missing.lisp}}.
@end table
@end deffn
@deffn {Method} {drop-missing} ((df @ref{❨52❩, , @t{data-frame}}) &optional predicate)
@anchor{❨120❩}@c
@methodsubindex{drop-missing}@c
Remove all rows from DF that are missing values according to PREDICATE
@table @strong
@item Source
@ref{❨12❩, , @t{missing.lisp}}.
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {head} (df &optional n)
@anchor{❨82❩}@c
@genericsubindex{head}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Method} {head} ((df @ref{❨52❩, , @t{data-frame}}) &optional n)
@anchor{❨83❩}@c
@methodsubindex{head}@c
Return the first N rows of DF; N defaults to 6
@table @strong
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {missingp} (data)
@anchor{❨110❩}@c
@genericsubindex{missingp}@c
Return a vector indicating the position of any missing value indicators.  They currently are :na and :missing
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨12❩, , @t{missing.lisp}}.
@item Methods
@deffn {Method} {missingp} (data)
@anchor{❨111❩}@c
@methodsubindex{missingp}@c
@table @strong
@end table
@end deffn
@deffn {Method} {missingp} ((data @t{(eql :na)}))
@anchor{❨112❩}@c
@methodsubindex{missingp}@c
@table @strong
@end table
@end deffn
@deffn {Method} {missingp} ((data @t{(eql :missing)}))
@anchor{❨113❩}@c
@methodsubindex{missingp}@c
@table @strong
@end table
@end deffn
@deffn {Method} {missingp} ((data @t{string}))
@anchor{❨114❩}@c
@methodsubindex{missingp}@c
@table @strong
@end table
@end deffn
@deffn {Method} {missingp} ((data @t{sequence}))
@anchor{❨115❩}@c
@methodsubindex{missingp}@c
@table @strong
@end table
@end deffn
@deffn {Method} {missingp} ((data @t{array}))
@anchor{❨116❩}@c
@methodsubindex{missingp}@c
@table @strong
@end table
@end deffn
@deffn {Method} {missingp} ((data @ref{❨52❩, , @t{data-frame}}))
@anchor{❨117❩}@c
@methodsubindex{missingp}@c
@table @strong
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Reader} {name} (object)
@anchor{❨33❩}@c
@genericsubindex{name}@c
@deffnx {Generic Writer} {(setf name)} (object)
@anchor{❨35❩}@c
@genericsubindex{(setf name)}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Reader Method} {name} ((data @ref{❨71❩, , @t{data}}))
@anchor{❨34❩}@c
@methodsubindex{name}@c
@deffnx {Writer Method} {(setf name)} ((data @ref{❨71❩, , @t{data}}))
@anchor{❨36❩}@c
@methodsubindex{(setf name)}@c
The name of the data frame.  MUST be the same as the symbol whose value cell points to this data frame.  This slot essentially allows us to go 'backwards' and get the symbol that names the data frame.
@table @strong
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@item Target Slot
@ref{❨72❩, , @t{name}}.
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {rename-column!} (data new old)
@anchor{❨102❩}@c
@genericsubindex{rename-column!}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Method} {rename-column!} (data new old)
@anchor{❨103❩}@c
@methodsubindex{rename-column!}@c
Substitute NEW@comma{} a SYMBOL@comma{} for OLD in DF@*

Useful when reading data files that have an empty or generated column name.@*

Example: (rename-column! cars 'name :||) will replace an empty symbol with 'name
@table @strong
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {replace-missing} (df map-alist)
@anchor{❨43❩}@c
@genericsubindex{replace-missing}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Method} {replace-missing} ((df @ref{❨52❩, , @t{data-frame}}) map-alist)
@anchor{❨44❩}@c
@methodsubindex{replace-missing}@c
Replace missing values with the values specified@*
The alist consists of a column name in the CAR and the replacement value in the CDR
Example: (replace-missing mtcarsm '((mpg . foo)))
@table @strong
@item Source
@ref{❨12❩, , @t{missing.lisp}}.
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {tail} (df &optional n)
@anchor{❨123❩}@c
@genericsubindex{tail}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Method} {tail} ((df @ref{❨52❩, , @t{data-frame}}) &optional n)
@anchor{❨124❩}@c
@methodsubindex{tail}@c
Return the last N rows of DF; N defaults to 6
@table @strong
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@end table
@end deffn

@node Public standalone methods, Public conditions, Public generic functions, Public Interface
@subsection Standalone methods
@deffn {Method} {as-alist} ((data @ref{❨71❩, , @t{data}}))
@anchor{❨372❩}@c
@methodsubindex{as-alist}@c
Key-column pairs as an alist.
@table @strong
@item Package
@t{num-utils.utilities}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {as-array} ((data-vector @ref{❨48❩, , @t{data-vector}}))
@anchor{❨358❩}@c
@methodsubindex{as-array}@c
@table @strong
@item Package
@t{array-operations/generic}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {as-array} ((data-frame @ref{❨52❩, , @t{data-frame}}))
@anchor{❨363❩}@c
@methodsubindex{as-array}@c
@table @strong
@item Package
@t{array-operations/generic}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {axis-dimension} ((axis @ref{❨141❩, , @t{ordered-keys}}))
@anchor{❨384❩}@c
@methodsubindex{axis-dimension}@c
@table @strong
@item Package
@t{select-dev}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {canonical-representation} ((axis @ref{❨141❩, , @t{ordered-keys}}) (slice @t{symbol}))
@anchor{❨383❩}@c
@methodsubindex{canonical-representation}@c
@table @strong
@item Package
@t{select-dev}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {describe-object} ((df @ref{❨52❩, , @t{data-frame}}) stream)
@anchor{❨360❩}@c
@methodsubindex{describe-object}@c
@table @strong
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {dims} ((data-vector @ref{❨48❩, , @t{data-vector}}))
@anchor{❨359❩}@c
@methodsubindex{dims}@c
@table @strong
@item Package
@t{array-operations/generic}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {dims} ((data-frame @ref{❨52❩, , @t{data-frame}}))
@anchor{❨364❩}@c
@methodsubindex{dims}@c
@table @strong
@item Package
@t{array-operations/generic}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {element-type} ((data @ref{❨71❩, , @t{data}}))
@anchor{❨373❩}@c
@methodsubindex{element-type}@c
@table @strong
@item Package
@t{array-operations/generic}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {initialize-instance} :after ((data-frame @ref{❨52❩, , @t{data-frame}}) &rest initargs)
@anchor{❨367❩}@c
@methodsubindex{initialize-instance}@c
@table @strong
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {ncol} ((data-frame @ref{❨52❩, , @t{data-frame}}))
@anchor{❨365❩}@c
@methodsubindex{ncol}@c
@table @strong
@item Package
@t{array-operations/generic}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {nrow} ((data-frame @ref{❨52❩, , @t{data-frame}}))
@anchor{❨366❩}@c
@methodsubindex{nrow}@c
@table @strong
@item Package
@t{array-operations/generic}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {print-object} ((data-vector @ref{❨48❩, , @t{data-vector}}) stream)
@anchor{❨356❩}@c
@methodsubindex{print-object}@c
@table @strong
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {print-object} ((df @ref{❨52❩, , @t{data-frame}}) stream)
@anchor{❨361❩}@c
@methodsubindex{print-object}@c
Print DATA-FRAME dimensions and type@*
After defining this method it is permanently associated with data-frame objects
@table @strong
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {print-object} ((object @ref{❨62❩, , @t{generic-variable-summary}}) stream)
@anchor{❨369❩}@c
@methodsubindex{print-object}@c
@table @strong
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Method} {print-object} ((object @ref{❨68❩, , @t{factor-variable-summary}}) stream)
@anchor{❨370❩}@c
@methodsubindex{print-object}@c
@table @strong
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Method} {print-object} ((object @ref{❨78❩, , @t{bit-variable-summary}}) stream)
@anchor{❨374❩}@c
@methodsubindex{print-object}@c
@table @strong
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Method} {print-object} ((object @ref{❨86❩, , @t{real-variable-summary}}) stream)
@anchor{❨375❩}@c
@methodsubindex{print-object}@c
@table @strong
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Method} {print-object} ((ordered-keys @ref{❨141❩, , @t{ordered-keys}}) stream)
@anchor{❨381❩}@c
@methodsubindex{print-object}@c
@table @strong
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {select} ((data-vector @ref{❨48❩, , @t{data-vector}}) &rest slices)
@anchor{❨357❩}@c
@methodsubindex{select}@c
@table @strong
@item Package
@t{select}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {select} ((data-frame @ref{❨52❩, , @t{data-frame}}) &rest slices)
@anchor{❨362❩}@c
@methodsubindex{select}@c
@table @strong
@item Package
@t{select}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Method} {select} ((ordered-keys @ref{❨141❩, , @t{ordered-keys}}) &rest selections)
@anchor{❨382❩}@c
@methodsubindex{select}@c
@table @strong
@item Package
@t{select}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn

@node Public conditions, Public structures, Public standalone methods, Public Interface
@subsection Conditions
@deftp {Condition} {duplicate-key}
@anchor{❨121❩}@c
@conditionsubindex{duplicate-key}@c
An operation attempted to use a key that already exists in ORDERED-KEYS
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@item Direct superclasses
@t{error}.
@item Direct slots
@defvr {Slot} {key}
@anchor{❨122❩}@c
@slotsubindex{key}@c
@table @strong
@item Initargs
@t{:key}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {key-not-found}
@anchor{❨59❩}@c
@conditionsubindex{key-not-found}@c
An operation was attempted on a non-existant key.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@item Direct superclasses
@t{error}.
@item Direct slots
@defvr {Slot} {key}
@anchor{❨60❩}@c
@slotsubindex{key}@c
@table @strong
@item Initargs
@t{:key}
@end table
@end defvr
@defvr {Slot} {keys}
@anchor{❨61❩}@c
@slotsubindex{keys}@c
@table @strong
@item Initargs
@t{:keys}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {large-data}
@anchor{❨40❩}@c
@conditionsubindex{large-data}@c
A operation was requested on a data set large enough to potentially cause problems.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@item Direct superclasses
@t{warning}.
@item Direct methods
@ref{❨193❩, , @t{data-size}}.
@item Direct slots
@defvr {Slot} {data-size}
@anchor{❨41❩}@c
@slotsubindex{data-size}@c
@table @strong
@item Initargs
@t{:data-size}
@item Readers
@ref{❨193❩, , @t{data-size}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@end table
@end deftp

@node Public structures, Public classes, Public conditions, Public Interface
@subsection Structures
@deftp {Structure} {bit-variable-summary}
@anchor{❨78❩}@c
@structuresubindex{bit-variable-summary}@c
Summary of a bit vector.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Direct superclasses
@ref{❨177❩, , @t{variable-summary%}}.
@item Direct methods
@ref{❨374❩, , @t{print-object}}.
@item Direct slots
@defvr {Slot} {count}
@anchor{❨79❩}@c
@slotsubindex{count}@c
@table @strong
@item Package
@t{common-lisp}.
@item Type
@t{alexandria:array-index}
@item Initform
@t{0}
@item Readers
@ref{❨236❩, , @t{bit-variable-summary-count}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@end table
@end deftp
@deftp {Structure} {factor-variable-summary}
@anchor{❨68❩}@c
@structuresubindex{factor-variable-summary}@c
Summary for factor variables
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Direct superclasses
@ref{❨177❩, , @t{variable-summary%}}.
@item Direct methods
@ref{❨370❩, , @t{print-object}}.
@item Direct slots
@defvr {Slot} {element-count-alist}
@anchor{❨69❩}@c
@slotsubindex{element-count-alist}@c
@table @strong
@item Type
@t{list}
@item Readers
@ref{❨210❩, , @t{factor-variable-summary-element-count-alist}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@end table
@end deftp
@deftp {Structure} {generic-variable-summary}
@anchor{❨62❩}@c
@structuresubindex{generic-variable-summary}@c
Summary for generic variables@comma{} i.e. those with mixed types.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Direct superclasses
@ref{❨177❩, , @t{variable-summary%}}.
@item Direct methods
@ref{❨369❩, , @t{print-object}}.
@item Direct slots
@defvr {Slot} {quantiles}
@anchor{❨63❩}@c
@slotsubindex{quantiles}@c
@table @strong
@item Type
@t{(or null data-frame:real-variable-summary)}
@item Readers
@ref{❨163❩, , @t{generic-variable-summary-quantiles}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {element-count-alist}
@anchor{❨64❩}@c
@slotsubindex{element-count-alist}@c
@table @strong
@item Type
@t{list}
@item Readers
@ref{❨138❩, , @t{generic-variable-summary-element-count-alist}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@end table
@end deftp
@deftp {Structure} {real-variable-summary}
@anchor{❨86❩}@c
@structuresubindex{real-variable-summary}@c
Summary of a real elements (using quantiles).
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Direct superclasses
@ref{❨177❩, , @t{variable-summary%}}.
@item Direct methods
@ref{❨375❩, , @t{print-object}}.
@item Direct slots
@defvr {Slot} {min}
@anchor{❨87❩}@c
@slotsubindex{min}@c
@table @strong
@item Package
@t{common-lisp}.
@item Type
@t{real}
@item Initform
@t{0}
@item Readers
@ref{❨166❩, , @t{real-variable-summary-min}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {q25}
@anchor{❨88❩}@c
@slotsubindex{q25}@c
@table @strong
@item Type
@t{real}
@item Initform
@t{0}
@item Readers
@ref{❨225❩, , @t{real-variable-summary-q25}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {q50}
@anchor{❨89❩}@c
@slotsubindex{q50}@c
@table @strong
@item Type
@t{real}
@item Initform
@t{0}
@item Readers
@ref{❨219❩, , @t{real-variable-summary-q50}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {mean}
@anchor{❨90❩}@c
@slotsubindex{mean}@c
@table @strong
@item Package
@t{alexandria}.
@item Type
@t{real}
@item Initform
@t{0}
@item Readers
@ref{❨155❩, , @t{real-variable-summary-mean}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {q75}
@anchor{❨91❩}@c
@slotsubindex{q75}@c
@table @strong
@item Type
@t{real}
@item Initform
@t{0}
@item Readers
@ref{❨133❩, , @t{real-variable-summary-q75}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {max}
@anchor{❨92❩}@c
@slotsubindex{max}@c
@table @strong
@item Package
@t{common-lisp}.
@item Type
@t{real}
@item Initform
@t{0}
@item Readers
@ref{❨135❩, , @t{real-variable-summary-max}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@end table
@end deftp

@node Public classes, Public types, Public structures, Public Interface
@subsection Classes
@deftp {Class} {data}
@anchor{❨71❩}@c
@classsubindex{data}@c
This class is used for implementing both data-vector and data-frame@comma{} and represents an ordered collection of key-column pairs.  Columns are not assumed to have any specific attributes.  This class is not exported.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@item Direct subclasses
@itemize @bullet
@item
@ref{❨52❩, , @t{data-frame}}.
@item
@ref{❨48❩, , @t{data-vector}}.
@end itemize
@item Direct methods
@itemize @bullet
@item
@ref{❨372❩, , @t{as-alist}}.
@item
@ref{❨151❩, , @t{check-column-compatibility}}.
@item
@ref{❨373❩, , @t{element-type}}.
@item
@ref{❨36❩, , @t{(setf name)}}.
@item
@ref{❨34❩, , @t{name}}.
@end itemize
@item Direct slots
@defvr {Slot} {name}
@anchor{❨72❩}@c
@slotsubindex{name}@c
The name of the data frame.  MUST be the same as the symbol whose value cell points to this data frame.  This slot essentially allows us to go 'backwards' and get the symbol that names the data frame.
@table @strong
@item Type
@t{string}
@item Initargs
@t{nil}
@item Readers
@ref{❨34❩, , @t{name}}.
@item Writers
@ref{❨36❩, , @t{(setf name)}}.
@end table
@end defvr
@defvr {Slot} {ordered-keys}
@anchor{❨73❩}@c
@slotsubindex{ordered-keys}@c
@table @strong
@item Type
@t{data-frame::ordered-keys}
@item Initargs
@t{:ordered-keys}
@end table
@end defvr
@defvr {Slot} {columns}
@anchor{❨74❩}@c
@slotsubindex{columns}@c
@table @strong
@item Type
@t{vector}
@item Initargs
@t{:columns}
@end table
@end defvr
@end table
@end deftp
@deftp {Class} {data-frame}
@anchor{❨52❩}@c
@classsubindex{data-frame}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@item Direct superclasses
@ref{❨71❩, , @t{data}}.
@item Direct methods
@itemize @bullet
@item
@ref{❨363❩, , @t{as-array}}.
@item
@ref{❨150❩, , @t{check-column-compatibility}}.
@item
@ref{❨360❩, , @t{describe-object}}.
@item
@ref{❨364❩, , @t{dims}}.
@item
@ref{❨120❩, , @t{drop-missing}}.
@item
@ref{❨83❩, , @t{head}}.
@item
@ref{❨367❩, , @t{initialize-instance}}.
@item
@ref{❨117❩, , @t{missingp}}.
@item
@ref{❨365❩, , @t{ncol}}.
@item
@ref{❨366❩, , @t{nrow}}.
@item
@ref{❨361❩, , @t{print-object}}.
@item
@ref{❨44❩, , @t{replace-missing}}.
@item
@ref{❨362❩, , @t{select}}.
@item
@ref{❨124❩, , @t{tail}}.
@end itemize
@end table
@end deftp
@deftp {Class} {data-vector}
@anchor{❨48❩}@c
@classsubindex{data-vector}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@item Direct superclasses
@ref{❨71❩, , @t{data}}.
@item Direct methods
@itemize @bullet
@item
@ref{❨358❩, , @t{as-array}}.
@item
@ref{❨359❩, , @t{dims}}.
@item
@ref{❨356❩, , @t{print-object}}.
@item
@ref{❨357❩, , @t{select}}.
@end itemize
@end table
@end deftp

@node Public types, , Public classes, Public Interface
@subsection Types
@deftp {Type} {data-type} ()
@anchor{❨125❩}@c
@typesubindex{data-type}@c
A statistical type for a data variable.  All data columns must be one of these types if they are to be intepreted properly by Lisp-Stat
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deftp


@c ---------
@c Internals
@c ---------
@node Internals, , Public Interface, Definitions
@section Internals
@menu
* Private special variables::
* Private macros::
* Private ordinary functions::
* Private generic functions::
* Private conditions::
* Private structures::
@end menu

@node Private special variables, Private macros, Internals, Internals
@subsection Special variables
@defvr {Special Variable} {*data-frames*}
@anchor{❨161❩}@c
@specialsubindex{*data-frames*}@c
Global list of all data frames
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨9❩, , @t{defdf.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*max-digits*}
@anchor{❨186❩}@c
@specialsubindex{*max-digits*}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*r-default-dataframes*}
@anchor{❨334❩}@c
@specialsubindex{*r-default-dataframes*}@c
Data frames corresponding to the default R datasets
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {*row-numbers-p*}
@anchor{❨197❩}@c
@specialsubindex{*row-numbers-p*}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end defvr
@defvr {Special Variable} {student-sleep}
@anchor{❨335❩}@c
@specialsubindex{student-sleep}@c
Student's Sleep Data
@table @strong
@item Package
@ref{❨18❩, , @t{rdata}}.
@item Source
@ref{❨16❩, , @t{rdata.lisp}}.
@end table
@end defvr

@node Private macros, Private ordinary functions, Private special variables, Internals
@subsection Macros
@deffn {Macro} {define-data-subclass} (class abbreviation)
@anchor{❨145❩}@c
@macrosubindex{define-data-subclass}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Macro} {ensure-plist} (pl)
@anchor{❨130❩}@c
@macrosubindex{ensure-plist}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨14❩, , @t{plist-aops.lisp}}.
@end table
@end deffn

@node Private ordinary functions, Private generic functions, Private macros, Internals
@subsection Ordinary functions
@deffn {Function} {2d-array-to-list} (array)
@anchor{❨227❩}@c
@functionsubindex{2d-array-to-list}@c
Convert an array to a list of lists
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {add-key!} (ordered-keys key)
@anchor{❨195❩}@c
@functionsubindex{add-key!}@c
Modify ORDERED-KEYS by adding KEY.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {add-keys} (ordered-keys &rest keys)
@anchor{❨173❩}@c
@functionsubindex{add-keys}@c
Add KEYS to ORDERED-KEYS
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {aesthetic-string} (thing)
@anchor{❨183❩}@c
@functionsubindex{aesthetic-string}@c
Return the string used to represent `thing` when printing aesthetically.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨7❩, , @t{formatted-output.lisp}}.
@end table
@end deffn
@deffn {Function} {alist-data} (class alist)
@anchor{❨172❩}@c
@functionsubindex{alist-data}@c
Create an object of CLASS (subclass of DATA) from ALIST which contains key-column pairs.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Reader} {bit-variable-summary-count} (instance)
@anchor{❨236❩}@c
@functionsubindex{bit-variable-summary-count}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨79❩, , @t{count}}.
@end table
@end deffn
@deffn {Function} {bit-variable-summary-desc} (instance)
@anchor{❨152❩}@c
@functionsubindex{bit-variable-summary-desc}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {bit-variable-summary-length} (instance)
@anchor{❨207❩}@c
@functionsubindex{bit-variable-summary-length}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {bit-variable-summary-missing} (instance)
@anchor{❨230❩}@c
@functionsubindex{bit-variable-summary-missing}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {bit-variable-summary-name} (instance)
@anchor{❨224❩}@c
@functionsubindex{bit-variable-summary-name}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {bit-variable-summary-p} (object)
@anchor{❨169❩}@c
@functionsubindex{bit-variable-summary-p}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {column-type-format} (sequence)
@anchor{❨182❩}@c
@functionsubindex{column-type-format}@c
Return a format string for the most specific type found in sequence
Use this for sequences of type T to determine how to format the column.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {copy-bit-variable-summary} (instance)
@anchor{❨223❩}@c
@functionsubindex{copy-bit-variable-summary}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {copy-factor-variable-summary} (instance)
@anchor{❨202❩}@c
@functionsubindex{copy-factor-variable-summary}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {copy-generic-variable-summary} (instance)
@anchor{❨209❩}@c
@functionsubindex{copy-generic-variable-summary}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {copy-ordered-keys} (ordered-keys)
@anchor{❨190❩}@c
@functionsubindex{copy-ordered-keys}@c
Return a copy of ORDERED-KEYS
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {copy-real-variable-summary} (instance)
@anchor{❨132❩}@c
@functionsubindex{copy-real-variable-summary}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {copy-variable-summary%} (instance)
@anchor{❨143❩}@c
@functionsubindex{copy-variable-summary%}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {df-env-p} (df)
@anchor{❨211❩}@c
@functionsubindex{df-env-p}@c
Returns T if there is environment set-up for the data frame@comma{} or NIL if there isn't one.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {df-exists-p} (s)
@anchor{❨139❩}@c
@functionsubindex{df-exists-p}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@end table
@end deffn
@deffn {Function} {distinct} (column)
@anchor{❨174❩}@c
@functionsubindex{distinct}@c
Returns the number of distinct elements in COLUMN@comma{} a symbol naming a variable.
Useful for formatting columns for human output.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {drop-na} (df)
@anchor{❨147❩}@c
@functionsubindex{drop-na}@c
Remove all rows from DF that are missing values.  Convenience R-like function.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨12❩, , @t{missing.lisp}}.
@end table
@end deffn
@deffn {Function} {ensure-arguments-alist} (rest)
@anchor{❨136❩}@c
@functionsubindex{ensure-arguments-alist}@c
Recognizes the following and converts them to an alist:

  plist@*
  alist@*
  (plist)@*
  (alist)@*
  (data-frame)
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {ensure-not-ratio} (real)
@anchor{❨205❩}@c
@functionsubindex{ensure-not-ratio}@c
When REAL is a RATIO@comma{} convert it to a float@comma{} otherwise return as is.  Used for printing.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {factor-variable-summary-desc} (instance)
@anchor{❨175❩}@c
@functionsubindex{factor-variable-summary-desc}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Reader} {factor-variable-summary-element-count-alist} (instance)
@anchor{❨210❩}@c
@functionsubindex{factor-variable-summary-element-count-alist}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨69❩, , @t{element-count-alist}}.
@end table
@end deffn
@deffn {Function} {factor-variable-summary-length} (instance)
@anchor{❨237❩}@c
@functionsubindex{factor-variable-summary-length}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {factor-variable-summary-missing} (instance)
@anchor{❨187❩}@c
@functionsubindex{factor-variable-summary-missing}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {factor-variable-summary-name} (instance)
@anchor{❨198❩}@c
@functionsubindex{factor-variable-summary-name}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {factor-variable-summary-p} (object)
@anchor{❨231❩}@c
@functionsubindex{factor-variable-summary-p}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {generic-variable-summary-desc} (instance)
@anchor{❨159❩}@c
@functionsubindex{generic-variable-summary-desc}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Reader} {generic-variable-summary-element-count-alist} (instance)
@anchor{❨138❩}@c
@functionsubindex{generic-variable-summary-element-count-alist}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨64❩, , @t{element-count-alist}}.
@end table
@end deffn
@deffn {Function} {generic-variable-summary-length} (instance)
@anchor{❨208❩}@c
@functionsubindex{generic-variable-summary-length}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {generic-variable-summary-missing} (instance)
@anchor{❨148❩}@c
@functionsubindex{generic-variable-summary-missing}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {generic-variable-summary-name} (instance)
@anchor{❨241❩}@c
@functionsubindex{generic-variable-summary-name}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {generic-variable-summary-p} (object)
@anchor{❨238❩}@c
@functionsubindex{generic-variable-summary-p}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Reader} {generic-variable-summary-quantiles} (instance)
@anchor{❨163❩}@c
@functionsubindex{generic-variable-summary-quantiles}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨63❩, , @t{quantiles}}.
@end table
@end deffn
@deffn {Function} {get-type} (x)
@anchor{❨196❩}@c
@functionsubindex{get-type}@c
Return the most specific type symbol for x
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨4❩, , @t{utils.lisp}}.
@end table
@end deffn
@deffn {Function} {invalid-df-name} (s)
@anchor{❨200❩}@c
@functionsubindex{invalid-df-name}@c
A user prompt@comma{} using DUOLOGUE@comma{} to select a valid data frame name.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@end table
@end deffn
@deffn {Function} {key-index} (ordered-keys key)
@anchor{❨217❩}@c
@functionsubindex{key-index}@c
Return the index for KEY.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {key-list} (data form)
@anchor{❨203❩}@c
@functionsubindex{key-list}@c
Return a list of keys used in REST@comma{} a form
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨13❩, , @t{filter.lisp}}.
@end table
@end deffn
@deffn {Function} {keys-count} (ordered-keys)
@anchor{❨158❩}@c
@functionsubindex{keys-count}@c
Number of keys.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {keys-vector} (ordered-keys)
@anchor{❨199❩}@c
@functionsubindex{keys-vector}@c
Vector of all keys.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {make-bit-variable-summary} (&key length missing name desc count)
@anchor{❨240❩}@c
@functionsubindex{make-bit-variable-summary}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {make-data} (class keys columns)
@anchor{❨215❩}@c
@functionsubindex{make-data}@c
Create a DATA object from KEYS and COLUMNS.  FOR INTERNAL USE.  Always creates a copy of COLUMNS in order to ensure that it is an adjustable array with a fill pointer.  KEYS are converted to ORDERED-KEYS if necessary.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {make-factor-variable-summary} (&key length missing name desc element-count-alist)
@anchor{❨204❩}@c
@functionsubindex{make-factor-variable-summary}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {make-generic-variable-summary} (&key length missing name desc quantiles element-count-alist)
@anchor{❨191❩}@c
@functionsubindex{make-generic-variable-summary}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {make-ordered-keys} (&key table)
@anchor{❨226❩}@c
@functionsubindex{make-ordered-keys}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {make-real-variable-summary} (&key length missing name desc min q25 q50 mean q75 max)
@anchor{❨162❩}@c
@functionsubindex{make-real-variable-summary}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {make-variable-summary%} (&key length missing name desc)
@anchor{❨165❩}@c
@functionsubindex{make-variable-summary%}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {max-decimal} (sequence &optional max-digits)
@anchor{❨153❩}@c
@functionsubindex{max-decimal}@c
Return the maximum number of digits to the right of the decimal point in the numbers of SEQUENCE@comma{} equal to or less than MAX-DIGITS
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {max-width} (sequence &optional max-width)
@anchor{❨131❩}@c
@functionsubindex{max-width}@c
Return the largest printed string size of the elements of SEQUENCE@comma{} equal to or less than MAX-WIDTH
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {monotonicp} (column)
@anchor{❨170❩}@c
@functionsubindex{monotonicp}@c
Returns T if all elements of COLUMN@comma{} a SYMBOL@comma{} are increasing monotonically
Useful for detecting row numbers in imported data.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {ordered-keys} (keys)
@anchor{❨140❩}@c
@functionsubindex{ordered-keys}@c
Create an ORDERED-KEYS object from KEYS (a sequence).
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {ordered-keys-p} (object)
@anchor{❨212❩}@c
@functionsubindex{ordered-keys-p}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Reader} {ordered-keys-table} (instance)
@anchor{❨194❩}@c
@functionsubindex{ordered-keys-table}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@item Target Slot
@ref{❨142❩, , @t{table}}.
@end table
@end deffn
@deffn {Function} {plist-data} (class plist)
@anchor{❨188❩}@c
@functionsubindex{plist-data}@c
Create an object of CLASS (subclass of DATA) from PLIST which contains keys and columns@comma{} interleaved.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {print-count-and-percentage} (stream count length)
@anchor{❨160❩}@c
@functionsubindex{print-count-and-percentage}@c
Print COUNT as is and also as a rounded percentage
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {print-table} (rows &optional stream)
@anchor{❨144❩}@c
@functionsubindex{print-table}@c
Print ROWS as a nicely-formatted table.@*
  Each row should have the same number of colums.@*
  Columns will be justified properly to fit the longest item in each one.
  Example:@*
    (print-table '((1 :red something)@*
                   (2 :green more)))@*
    =>@*
    1 | RED   | SOMETHING@*
    2 | GREEN | MORE@*
  
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨7❩, , @t{formatted-output.lisp}}.
@end table
@end deffn
@deffn {Function} {printer-status} ()
@anchor{❨168❩}@c
@functionsubindex{printer-status}@c
Print values of all the printer variables
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {real-variable-summary-desc} (instance)
@anchor{❨220❩}@c
@functionsubindex{real-variable-summary-desc}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {real-variable-summary-length} (instance)
@anchor{❨167❩}@c
@functionsubindex{real-variable-summary-length}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Reader} {real-variable-summary-max} (instance)
@anchor{❨135❩}@c
@functionsubindex{real-variable-summary-max}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨92❩, , @t{max}}.
@end table
@end deffn
@deffn {Reader} {real-variable-summary-mean} (instance)
@anchor{❨155❩}@c
@functionsubindex{real-variable-summary-mean}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨90❩, , @t{mean}}.
@end table
@end deffn
@deffn {Reader} {real-variable-summary-min} (instance)
@anchor{❨166❩}@c
@functionsubindex{real-variable-summary-min}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨87❩, , @t{min}}.
@end table
@end deffn
@deffn {Function} {real-variable-summary-missing} (instance)
@anchor{❨164❩}@c
@functionsubindex{real-variable-summary-missing}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {real-variable-summary-name} (instance)
@anchor{❨201❩}@c
@functionsubindex{real-variable-summary-name}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {real-variable-summary-p} (object)
@anchor{❨157❩}@c
@functionsubindex{real-variable-summary-p}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Reader} {real-variable-summary-q25} (instance)
@anchor{❨225❩}@c
@functionsubindex{real-variable-summary-q25}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨88❩, , @t{q25}}.
@end table
@end deffn
@deffn {Reader} {real-variable-summary-q50} (instance)
@anchor{❨219❩}@c
@functionsubindex{real-variable-summary-q50}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨89❩, , @t{q50}}.
@end table
@end deffn
@deffn {Reader} {real-variable-summary-q75} (instance)
@anchor{❨133❩}@c
@functionsubindex{real-variable-summary-q75}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨91❩, , @t{q75}}.
@end table
@end deffn
@deffn {Function} {remove-columns!} (data &rest keys)
@anchor{❨232❩}@c
@functionsubindex{remove-columns!}@c
Modify DATA (a data-frame or data-vector) by removing columns with keys.
If a data-frame environment exists@comma{} add columns to it as well.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {remove-key!} (ordered-keys key)
@anchor{❨213❩}@c
@functionsubindex{remove-key!}@c
Modify ORDERED-KEYS by removing KEY.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@end table
@end deffn
@deffn {Function} {reverse-df} (df)
@anchor{❨137❩}@c
@functionsubindex{reverse-df}@c
Return DF with columns in reverse order
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@deffn {Function} {show-properties} (df)
@anchor{❨206❩}@c
@functionsubindex{show-properties}@c
Show the standard properties of the variables of the data frame DF
Standard properties are 'label'@comma{} 'type' and 'unit'
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨11❩, , @t{properties.lisp}}.
@end table
@end deffn
@deffn {Function} {show-symbols} (pkg)
@anchor{❨214❩}@c
@functionsubindex{show-symbols}@c
Print all symbols in PKG
Example: (show-symbols 'mtcars)
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨9❩, , @t{defdf.lisp}}.
@end table
@end deffn
@deffn {Function} {summarize-factor-variable} (column)
@anchor{❨218❩}@c
@functionsubindex{summarize-factor-variable}@c
Return an alist of factor/count pairs
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {summarize-generic-variable} (column &optional name)
@anchor{❨146❩}@c
@functionsubindex{summarize-generic-variable}@c
Return an object that summarizes COLUMN of a DATA-FRAME.  Primarily intended for printing@comma{} not analysis@comma{} returned values should print nicely.  This function can be used on any type of column@comma{} even one with mixed types
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {summarize-real-variable} (column)
@anchor{❨189❩}@c
@functionsubindex{summarize-real-variable}@c
Return a summary for a float variable
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {types-in-column} (seq)
@anchor{❨156❩}@c
@functionsubindex{types-in-column}@c
Return a list of the types found in SEQ
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨4❩, , @t{utils.lisp}}.
@end table
@end deffn
@deffn {Reader} {variable-summary%-desc} (instance)
@anchor{❨154❩}@c
@functionsubindex{variable-summary%-desc}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨181❩, , @t{desc}}.
@end table
@end deffn
@deffn {Reader} {variable-summary%-length} (instance)
@anchor{❨171❩}@c
@functionsubindex{variable-summary%-length}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨178❩, , @t{length}}.
@end table
@end deffn
@deffn {Reader} {variable-summary%-missing} (instance)
@anchor{❨216❩}@c
@functionsubindex{variable-summary%-missing}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨179❩, , @t{missing}}.
@end table
@end deffn
@deffn {Reader} {variable-summary%-name} (instance)
@anchor{❨239❩}@c
@functionsubindex{variable-summary%-name}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Target Slot
@ref{❨180❩, , @t{name}}.
@end table
@end deffn
@deffn {Function} {variable-summary%-p} (object)
@anchor{❨176❩}@c
@functionsubindex{variable-summary%-p}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@end table
@end deffn
@deffn {Function} {weave} (&rest lists)
@anchor{❨134❩}@c
@functionsubindex{weave}@c
Return a list whose elements alternate between each of the lists
`lists`. Weaving stops when any of the lists has been exhausted.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨7❩, , @t{formatted-output.lisp}}.
@end table
@end deffn

@node Private generic functions, Private conditions, Private ordinary functions, Internals
@subsection Generic functions
@deffn {Generic Function} {check-column-compatibility} (data column)
@anchor{❨149❩}@c
@genericsubindex{check-column-compatibility}@c
Check if COLUMN is compatible with DATA.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@item Methods
@deffn {Method} {check-column-compatibility} ((data @ref{❨52❩, , @t{data-frame}}) column)
@anchor{❨150❩}@c
@methodsubindex{check-column-compatibility}@c
@table @strong
@end table
@end deffn
@deffn {Method} {check-column-compatibility} ((data @ref{❨71❩, , @t{data}}) column)
@anchor{❨151❩}@c
@methodsubindex{check-column-compatibility}@c
@table @strong
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {column-length} (column)
@anchor{❨228❩}@c
@genericsubindex{column-length}@c
Return the length of column.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Methods
@deffn {Method} {column-length} ((column @t{vector}))
@anchor{❨229❩}@c
@methodsubindex{column-length}@c
@table @strong
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Reader} {data-size} (condition)
@anchor{❨192❩}@c
@genericsubindex{data-size}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Reader Method} {data-size} ((condition @ref{❨40❩, , @t{large-data}}))
@anchor{❨193❩}@c
@methodsubindex{data-size}@c
@table @strong
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@item Target Slot
@ref{❨41❩, , @t{data-size}}.
@end table
@end deffn
@end table
@end deffn
@deffn {Generic Function} {default-column-formats} (array)
@anchor{❨221❩}@c
@genericsubindex{default-column-formats}@c
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Methods
@deffn {Method} {default-column-formats} ((array @t{simple-array}))
@anchor{❨222❩}@c
@methodsubindex{default-column-formats}@c
Return a list of formatting strings for ARRAY@*
The method returns a set of default formatting strings using heuristics.
@table @strong
@item Source
@ref{❨6❩, , @t{pprint.lisp}}.
@end table
@end deffn
@end table
@end deffn

@node Private conditions, Private structures, Private generic functions, Internals
@subsection Conditions
@deftp {Condition} {data-frame-exists}
@anchor{❨184❩}@c
@conditionsubindex{data-frame-exists}@c
An attempt to redefine an existing data frame.  Triggered if either the symbol is bound or the package exists.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@item Direct superclasses
@t{error}.
@item Direct methods
@ref{❨51❩, , @t{data-frame}}.
@item Direct slots
@defvr {Slot} {data-frame}
@anchor{❨185❩}@c
@slotsubindex{data-frame}@c
@table @strong
@item Initargs
@t{:data-frame}
@item Readers
@ref{❨51❩, , @t{data-frame}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@end table
@end deftp
@deftp {Condition} {missing-data}
@anchor{❨233❩}@c
@conditionsubindex{missing-data}@c
A variable has missing data@comma{} e.g. :na@comma{} nil
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨10❩, , @t{conditions.lisp}}.
@item Direct superclasses
@t{error}.
@item Direct slots
@defvr {Slot} {name}
@anchor{❨234❩}@c
@slotsubindex{name}@c
@table @strong
@item Initargs
@t{:name}
@end table
@end defvr
@defvr {Slot} {data}
@anchor{❨235❩}@c
@slotsubindex{data}@c
@table @strong
@item Initargs
@t{:data}
@end table
@end defvr
@end table
@end deftp

@node Private structures, , Private conditions, Internals
@subsection Structures
@deftp {Structure} {ordered-keys}
@anchor{❨141❩}@c
@structuresubindex{ordered-keys}@c
Representation of ordered keys@*
Ordered keys provide a mapping from column keys (symbols) to nonnegative
integers.  They are used internally and the corresponding interface is
NOT EXPORTED.@*

TABLE maps keys to indexes@comma{} starting from zero.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨5❩, , @t{data-frame.lisp}}.
@item Direct superclasses
@t{structure-object}.
@item Direct methods
@itemize @bullet
@item
@ref{❨384❩, , @t{axis-dimension}}.
@item
@ref{❨383❩, , @t{canonical-representation}}.
@item
@ref{❨381❩, , @t{print-object}}.
@item
@ref{❨382❩, , @t{select}}.
@end itemize
@item Direct slots
@defvr {Slot} {table}
@anchor{❨142❩}@c
@slotsubindex{table}@c
@table @strong
@item Type
@t{hash-table}
@item Initform
@t{(make-hash-table :test (function eq))}
@item Readers
@ref{❨194❩, , @t{ordered-keys-table}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@end table
@end deftp
@deftp {Structure} {variable-summary%}
@anchor{❨177❩}@c
@structuresubindex{variable-summary%}@c
Base class for summarizing variables.  Summary functions take SYMBOLs@comma{} rather than values@comma{} because the symbol property lists naming the variables have meta-data@comma{} e.g. type@comma{} label@comma{} that we want to print.  Not exported.
@table @strong
@item Package
@ref{❨17❩, , @t{data-frame}}.
@item Source
@ref{❨8❩, , @t{summary.lisp}}.
@item Direct superclasses
@t{structure-object}.
@item Direct subclasses
@itemize @bullet
@item
@ref{❨78❩, , @t{bit-variable-summary}}.
@item
@ref{❨68❩, , @t{factor-variable-summary}}.
@item
@ref{❨62❩, , @t{generic-variable-summary}}.
@item
@ref{❨86❩, , @t{real-variable-summary}}.
@end itemize
@item Direct slots
@defvr {Slot} {length}
@anchor{❨178❩}@c
@slotsubindex{length}@c
@table @strong
@item Package
@t{common-lisp}.
@item Type
@t{alexandria:array-index}
@item Initform
@t{0}
@item Readers
@ref{❨171❩, , @t{variable-summary%-length}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {missing}
@anchor{❨179❩}@c
@slotsubindex{missing}@c
@table @strong
@item Type
@t{fixnum}
@item Initform
@t{0}
@item Readers
@ref{❨216❩, , @t{variable-summary%-missing}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {name}
@anchor{❨180❩}@c
@slotsubindex{name}@c
@table @strong
@item Type
@t{string}
@item Initform
@t{""}
@item Readers
@ref{❨239❩, , @t{variable-summary%-name}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@defvr {Slot} {desc}
@anchor{❨181❩}@c
@slotsubindex{desc}@c
@table @strong
@item Type
@t{string}
@item Initform
@t{""}
@item Readers
@ref{❨154❩, , @t{variable-summary%-desc}}.
@item Writers
@i{This slot is read-only.}
@end table
@end defvr
@end table
@end deftp



@c ====================================================================
@c Indexes
@c ====================================================================
@node Indexes, , Definitions, Top
@appendix Indexes
@menu
* Concept index::
* Function index::
* Variable index::
* Data type index::
@end menu


@c -------------
@c Concept index
@c -------------
@node Concept index, Function index, Indexes, Indexes
@appendixsec Concepts
@printindex cp

@page


@c --------------
@c Function index
@c --------------
@node Function index, Variable index, Concept index, Indexes
@appendixsec Functions
@printindex fn

@page


@c --------------
@c Variable index
@c --------------
@node Variable index, Data type index, Function index, Indexes
@appendixsec Variables
@printindex vr

@page


@c ---------------
@c Data type index
@c ---------------
@node Data type index, , Variable index, Indexes
@appendixsec Data types
@printindex tp

@bye

@c data-frame.texi ends here
